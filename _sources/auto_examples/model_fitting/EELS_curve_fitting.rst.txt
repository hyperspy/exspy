
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/model_fitting/EELS_curve_fitting.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_model_fitting_EELS_curve_fitting.py:


EELS curve fitting
==================

Performs curve fitting to an EELS spectrum, plots the result and saves it as
png file.

.. GENERATED FROM PYTHON SOURCE LINES 10-32



.. image-sg:: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :alt: coreloss_spectrum Signal
   :srcset: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]      0%|                                      | 34.8k/42.3M [00:00<02:07, 331kB/s]      0%|                                       | 128k/42.3M [00:00<01:34, 448kB/s]      1%|▍                                     | 466k/42.3M [00:00<00:28, 1.48MB/s]      2%|▉                                    | 1.00M/42.3M [00:00<00:14, 2.78MB/s]      4%|█▌                                   | 1.78M/42.3M [00:00<00:09, 4.41MB/s]      8%|██▊                                  | 3.18M/42.3M [00:00<00:05, 7.43MB/s]     14%|█████▏                               | 5.97M/42.3M [00:00<00:02, 13.8MB/s]     20%|███████▍                             | 8.56M/42.3M [00:00<00:01, 17.5MB/s]     27%|█████████▉                           | 11.4M/42.3M [00:00<00:01, 20.7MB/s]     33%|████████████▍                        | 14.1M/42.3M [00:01<00:01, 22.9MB/s]     40%|██████████████▋                      | 16.8M/42.3M [00:01<00:01, 23.9MB/s]     48%|█████████████████▌                   | 20.1M/42.3M [00:01<00:00, 26.8MB/s]     54%|████████████████████                 | 22.9M/42.3M [00:01<00:00, 27.2MB/s]     61%|██████████████████████▋              | 26.0M/42.3M [00:01<00:00, 28.2MB/s]     68%|█████████████████████████▏           | 28.8M/42.3M [00:01<00:00, 28.2MB/s]     75%|███████████████████████████▊         | 31.8M/42.3M [00:01<00:00, 24.1MB/s]     82%|██████████████████████████████▌      | 34.9M/42.3M [00:01<00:00, 25.7MB/s]     89%|█████████████████████████████████    | 37.8M/42.3M [00:01<00:00, 26.6MB/s]     96%|███████████████████████████████████▋ | 40.8M/42.3M [00:02<00:00, 27.6MB/s]      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 42.3M/42.3M [00:00<00:00, 251GB/s]
      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]      0%|                                      | 41.0k/66.1M [00:00<03:56, 279kB/s]      0%|                                       | 123k/66.1M [00:00<02:29, 443kB/s]      0%|▏                                      | 308k/66.1M [00:00<01:09, 951kB/s]      1%|▍                                     | 653k/66.1M [00:00<00:36, 1.80MB/s]      2%|▊                                    | 1.42M/66.1M [00:00<00:17, 3.71MB/s]      5%|█▋                                   | 3.01M/66.1M [00:00<00:08, 7.58MB/s]      9%|███▎                                 | 6.03M/66.1M [00:00<00:04, 14.6MB/s]     14%|█████                                | 9.06M/66.1M [00:00<00:02, 19.5MB/s]     19%|███████▏                             | 12.9M/66.1M [00:00<00:02, 25.2MB/s]     24%|█████████                            | 16.2M/66.1M [00:01<00:01, 27.6MB/s]     29%|██████████▊                          | 19.4M/66.1M [00:01<00:01, 29.0MB/s]     34%|████████████▌                        | 22.5M/66.1M [00:01<00:01, 29.5MB/s]     38%|██████████████▏                      | 25.4M/66.1M [00:01<00:01, 29.5MB/s]     44%|████████████████▏                    | 28.9M/66.1M [00:01<00:01, 29.3MB/s]     48%|█████████████████▊                   | 31.8M/66.1M [00:01<00:01, 29.3MB/s]     54%|████████████████████                 | 35.8M/66.1M [00:01<00:00, 32.3MB/s]     60%|██████████████████████▏              | 39.7M/66.1M [00:01<00:00, 34.2MB/s]     65%|████████████████████████▏            | 43.2M/66.1M [00:01<00:00, 34.1MB/s]     70%|██████████████████████████           | 46.6M/66.1M [00:02<00:00, 33.7MB/s]     76%|███████████████████████████▉         | 50.0M/66.1M [00:02<00:00, 30.0MB/s]     80%|█████████████████████████████▋       | 53.0M/66.1M [00:02<00:00, 30.2MB/s]     85%|███████████████████████████████▍     | 56.1M/66.1M [00:02<00:00, 30.3MB/s]     90%|█████████████████████████████████    | 59.2M/66.1M [00:02<00:00, 30.2MB/s]     95%|██████████████████████████████████▉  | 62.5M/66.1M [00:02<00:00, 31.1MB/s]     99%|████████████████████████████████████▋| 65.6M/66.1M [00:02<00:00, 31.0MB/s]      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 66.1M/66.1M [00:00<00:00, 461GB/s]






|

.. code-block:: Python


    import hyperspy.api as hs

    s = hs.load("coreloss_spectrum.msa", signal_type="EELS")
    ll = hs.load("lowloss_spectrum.msa", signal_type="EELS")

    s.add_elements(("Mn", "O"))
    s.set_microscope_parameters(
        beam_energy=300, convergence_angle=24.6, collection_angle=13.6
    )

    m = s.create_model(low_loss=ll)
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()

    # one can also use the Dirac GOS by specifying the GOS parameter
    m = s.create_model(low_loss=ll, GOS="dirac")
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 13.362 seconds)


.. _sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: EELS_curve_fitting.ipynb <EELS_curve_fitting.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: EELS_curve_fitting.py <EELS_curve_fitting.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: EELS_curve_fitting.zip <EELS_curve_fitting.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
