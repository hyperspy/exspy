
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/model_fitting/EELS_curve_fitting.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_model_fitting_EELS_curve_fitting.py:


EELS curve fitting
==================

Performs curve fitting to an EELS spectrum, plots the result and saves it as
png file.

.. GENERATED FROM PYTHON SOURCE LINES 10-32



.. image-sg:: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :alt: coreloss_spectrum Signal
   :srcset: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]      0%|                                      | 15.4k/42.3M [00:00<05:30, 128kB/s]      0%|                                       | 114k/42.3M [00:00<01:16, 549kB/s]      1%|▎                                      | 287k/42.3M [00:00<00:52, 801kB/s]      2%|▉                                     | 983k/42.3M [00:00<00:15, 2.74MB/s]      5%|█▊                                   | 2.03M/42.3M [00:00<00:07, 5.15MB/s]      9%|███▏                                 | 3.67M/42.3M [00:00<00:04, 8.58MB/s]     15%|█████▋                               | 6.46M/42.3M [00:00<00:02, 14.5MB/s]     25%|█████████▏                           | 10.4M/42.3M [00:00<00:01, 22.2MB/s]     32%|███████████▋                         | 13.4M/42.3M [00:01<00:01, 24.5MB/s]     40%|██████████████▊                      | 16.9M/42.3M [00:01<00:00, 27.7MB/s]     47%|█████████████████▌                   | 20.0M/42.3M [00:01<00:00, 28.7MB/s]     56%|████████████████████▋                | 23.6M/42.3M [00:01<00:00, 30.7MB/s]     65%|███████████████████████▉             | 27.3M/42.3M [00:01<00:00, 32.6MB/s]     73%|██████████████████████████▉          | 30.7M/42.3M [00:01<00:00, 33.2MB/s]     81%|██████████████████████████████▏      | 34.4M/42.3M [00:01<00:00, 34.3MB/s]     90%|█████████████████████████████████▏   | 37.9M/42.3M [00:01<00:00, 34.3MB/s]     98%|████████████████████████████████████▏| 41.3M/42.3M [00:01<00:00, 33.8MB/s]      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 42.3M/42.3M [00:00<00:00, 281GB/s]
      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]      0%|                                      | 18.4k/66.1M [00:00<07:37, 145kB/s]      0%|                                       | 112k/66.1M [00:00<02:01, 544kB/s]      0%|▏                                      | 295k/66.1M [00:00<01:21, 807kB/s]      1%|▌                                     | 919k/66.1M [00:00<00:26, 2.49MB/s]      3%|█                                    | 1.90M/66.1M [00:00<00:13, 4.73MB/s]      5%|█▉                                   | 3.39M/66.1M [00:00<00:08, 7.81MB/s]     10%|███▌                                 | 6.29M/66.1M [00:00<00:04, 14.2MB/s]     14%|█████▎                               | 9.43M/66.1M [00:00<00:02, 19.4MB/s]     19%|██████▉                              | 12.4M/66.1M [00:01<00:02, 22.6MB/s]     23%|████████▋                            | 15.5M/66.1M [00:01<00:02, 25.0MB/s]     28%|██████████▎                          | 18.4M/66.1M [00:01<00:01, 26.3MB/s]     33%|████████████▏                        | 21.7M/66.1M [00:01<00:01, 28.3MB/s]     38%|█████████████▉                       | 24.9M/66.1M [00:01<00:01, 25.1MB/s]     42%|███████████████▋                     | 28.0M/66.1M [00:01<00:01, 26.6MB/s]     47%|█████████████████▌                   | 31.3M/66.1M [00:01<00:01, 28.4MB/s]     52%|███████████████████▎                 | 34.6M/66.1M [00:01<00:01, 29.7MB/s]     57%|█████████████████████▏               | 37.9M/66.1M [00:01<00:00, 30.6MB/s]     62%|██████████████████████▉              | 41.0M/66.1M [00:01<00:00, 30.6MB/s]     67%|████████████████████████▊            | 44.3M/66.1M [00:02<00:00, 31.5MB/s]     72%|██████████████████████████▌          | 47.5M/66.1M [00:02<00:00, 31.5MB/s]     77%|████████████████████████████▍        | 50.8M/66.1M [00:02<00:00, 32.0MB/s]     82%|██████████████████████████████▏      | 54.0M/66.1M [00:02<00:00, 26.8MB/s]     86%|███████████████████████████████▉     | 57.1M/66.1M [00:02<00:00, 27.8MB/s]     91%|█████████████████████████████████▊   | 60.3M/66.1M [00:02<00:00, 29.1MB/s]     96%|███████████████████████████████████▍ | 63.3M/66.1M [00:02<00:00, 28.7MB/s]      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 66.1M/66.1M [00:00<00:00, 302GB/s]






|

.. code-block:: Python


    import hyperspy.api as hs

    s = hs.load("coreloss_spectrum.msa", signal_type="EELS")
    ll = hs.load("lowloss_spectrum.msa", signal_type="EELS")

    s.add_elements(("Mn", "O"))
    s.set_microscope_parameters(
        beam_energy=300, convergence_angle=24.6, collection_angle=13.6
    )

    m = s.create_model(low_loss=ll)
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()

    # one can also use the Dirac GOS by specifying the GOS parameter
    m = s.create_model(low_loss=ll, GOS="dirac")
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 14.072 seconds)


.. _sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: EELS_curve_fitting.ipynb <EELS_curve_fitting.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: EELS_curve_fitting.py <EELS_curve_fitting.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: EELS_curve_fitting.zip <EELS_curve_fitting.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
