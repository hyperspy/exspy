
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/model_fitting/EELS_curve_fitting.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_model_fitting_EELS_curve_fitting.py:


EELS curve fitting
==================

Performs curve fitting to an EELS spectrum, plots the result and saves it as
png file.

.. GENERATED FROM PYTHON SOURCE LINES 10-32



.. image-sg:: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :alt: coreloss_spectrum Signal
   :srcset: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]      0%|                                      | 15.4k/42.3M [00:00<05:06, 138kB/s]      0%|                                      | 77.8k/42.3M [00:00<01:43, 409kB/s]      1%|▏                                      | 240k/42.3M [00:00<01:01, 687kB/s]      1%|▍                                     | 534k/42.3M [00:00<00:29, 1.39MB/s]      3%|█▎                                   | 1.43M/42.3M [00:00<00:14, 2.89MB/s]      8%|██▊                                  | 3.27M/42.3M [00:00<00:05, 6.82MB/s]     16%|█████▊                               | 6.60M/42.3M [00:00<00:02, 13.9MB/s]     22%|████████                             | 9.25M/42.3M [00:00<00:01, 17.4MB/s]     30%|███████████                          | 12.6M/42.3M [00:01<00:01, 22.0MB/s]     36%|█████████████▍                       | 15.4M/42.3M [00:01<00:01, 23.6MB/s]     44%|████████████████▎                    | 18.6M/42.3M [00:01<00:01, 21.8MB/s]     52%|███████████████████                  | 21.8M/42.3M [00:01<00:00, 24.5MB/s]     58%|█████████████████████▌               | 24.6M/42.3M [00:01<00:00, 25.5MB/s]     66%|████████████████████████▌            | 28.0M/42.3M [00:01<00:00, 27.8MB/s]     73%|███████████████████████████▏         | 31.0M/42.3M [00:01<00:00, 28.5MB/s]     80%|█████████████████████████████▋       | 33.9M/42.3M [00:01<00:00, 28.5MB/s]     89%|█████████████████████████████████    | 37.8M/42.3M [00:01<00:00, 31.4MB/s]     97%|███████████████████████████████████▊ | 41.0M/42.3M [00:02<00:00, 26.8MB/s]      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 42.3M/42.3M [00:00<00:00, 246GB/s]
      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]      0%|                                      | 14.3k/66.1M [00:00<10:23, 106kB/s]      0%|                                      | 96.3k/66.1M [00:00<02:33, 431kB/s]      0%|▏                                      | 223k/66.1M [00:00<01:34, 696kB/s]      1%|▎                                     | 517k/66.1M [00:00<00:50, 1.30MB/s]      2%|▊                                    | 1.36M/66.1M [00:00<00:18, 3.45MB/s]      4%|█▌                                   | 2.88M/66.1M [00:00<00:09, 7.00MB/s]      8%|██▉                                  | 5.31M/66.1M [00:00<00:04, 12.2MB/s]     13%|████▋                                | 8.42M/66.1M [00:00<00:03, 17.9MB/s]     18%|██████▌                              | 11.8M/66.1M [00:01<00:02, 22.8MB/s]     22%|████████▎                            | 14.7M/66.1M [00:01<00:02, 24.7MB/s]     28%|██████████▏                          | 18.2M/66.1M [00:01<00:01, 27.8MB/s]     32%|███████████▉                         | 21.4M/66.1M [00:01<00:01, 28.8MB/s]     37%|█████████████▌                       | 24.3M/66.1M [00:01<00:01, 28.3MB/s]     42%|███████████████▌                     | 27.7M/66.1M [00:01<00:01, 30.1MB/s]     47%|█████████████████▏                   | 30.8M/66.1M [00:01<00:01, 29.8MB/s]     52%|███████████████████▏                 | 34.2M/66.1M [00:01<00:01, 31.0MB/s]     57%|█████████████████████▏               | 37.9M/66.1M [00:01<00:00, 32.9MB/s]     62%|███████████████████████              | 41.2M/66.1M [00:01<00:00, 32.8MB/s]     68%|█████████████████████████▎           | 45.1M/66.1M [00:02<00:00, 30.3MB/s]     74%|███████████████████████████▎         | 48.9M/66.1M [00:02<00:00, 32.3MB/s]     80%|█████████████████████████████▍       | 52.6M/66.1M [00:02<00:00, 33.8MB/s]     85%|███████████████████████████████▍     | 56.2M/66.1M [00:02<00:00, 34.2MB/s]     90%|█████████████████████████████████▍   | 59.7M/66.1M [00:02<00:00, 34.4MB/s]     96%|███████████████████████████████████▋ | 63.7M/66.1M [00:02<00:00, 35.9MB/s]      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 66.1M/66.1M [00:00<00:00, 355GB/s]






|

.. code-block:: Python


    import hyperspy.api as hs

    s = hs.load("coreloss_spectrum.msa", signal_type="EELS")
    low_loss = hs.load("lowloss_spectrum.msa", signal_type="EELS")

    s.add_elements(("Mn", "O"))
    s.set_microscope_parameters(
        beam_energy=300, convergence_angle=24.6, collection_angle=13.6
    )

    m = s.create_model(low_loss=low_loss)
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()

    # one can also use the Dirac GOS by specifying the GOS parameter
    m = s.create_model(low_loss=low_loss, GOS="dirac")
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 13.855 seconds)


.. _sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: EELS_curve_fitting.ipynb <EELS_curve_fitting.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: EELS_curve_fitting.py <EELS_curve_fitting.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: EELS_curve_fitting.zip <EELS_curve_fitting.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
