
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/model_fitting/EELS_curve_fitting.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_model_fitting_EELS_curve_fitting.py:


EELS curve fitting
==================

Performs curve fitting to an EELS spectrum, plots the result and saves it as
png file.

.. GENERATED FROM PYTHON SOURCE LINES 10-32



.. image-sg:: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :alt: coreloss_spectrum Signal
   :srcset: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]      0%|                                      | 17.4k/42.3M [00:00<04:20, 162kB/s]      0%|                                       | 115k/42.3M [00:00<01:40, 421kB/s]      1%|▎                                      | 300k/42.3M [00:00<00:46, 902kB/s]      2%|▋                                     | 707k/42.3M [00:00<00:21, 1.95MB/s]      4%|█▎                                   | 1.52M/42.3M [00:00<00:10, 3.92MB/s]      7%|██▌                                  | 2.94M/42.3M [00:00<00:05, 7.16MB/s]     13%|████▉                                | 5.64M/42.3M [00:00<00:02, 13.3MB/s]     21%|███████▋                             | 8.81M/42.3M [00:00<00:01, 18.9MB/s]     28%|██████████▍                          | 12.0M/42.3M [00:01<00:01, 22.8MB/s]     37%|█████████████▊                       | 15.8M/42.3M [00:01<00:00, 27.5MB/s]     45%|████████████████▋                    | 19.1M/42.3M [00:01<00:00, 24.3MB/s]     54%|████████████████████                 | 22.9M/42.3M [00:01<00:00, 27.8MB/s]     61%|██████████████████████▋              | 25.9M/42.3M [00:01<00:00, 28.5MB/s]     69%|█████████████████████████▋           | 29.3M/42.3M [00:01<00:00, 30.0MB/s]     77%|████████████████████████████▋        | 32.8M/42.3M [00:01<00:00, 31.3MB/s]     86%|███████████████████████████████▋     | 36.2M/42.3M [00:01<00:00, 32.2MB/s]     93%|██████████████████████████████████▌  | 39.5M/42.3M [00:01<00:00, 32.2MB/s]      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 42.3M/42.3M [00:00<00:00, 222GB/s]
      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]      0%|                                      | 44.0k/66.1M [00:00<02:35, 424kB/s]      0%|                                       | 137k/66.1M [00:00<02:20, 471kB/s]      1%|▎                                     | 488k/66.1M [00:00<00:42, 1.54MB/s]      2%|▌                                    | 1.04M/66.1M [00:00<00:22, 2.86MB/s]      3%|█                                    | 1.98M/66.1M [00:00<00:12, 4.97MB/s]      5%|█▉                                   | 3.49M/66.1M [00:00<00:07, 8.16MB/s]     10%|███▌                                 | 6.31M/66.1M [00:00<00:04, 14.4MB/s]     15%|█████▌                               | 9.99M/66.1M [00:00<00:02, 21.3MB/s]     20%|███████▌                             | 13.5M/66.1M [00:00<00:02, 25.5MB/s]     26%|█████████▌                           | 17.1M/66.1M [00:01<00:01, 28.6MB/s]     31%|███████████▍                         | 20.4M/66.1M [00:01<00:01, 30.0MB/s]     36%|█████████████▎                       | 23.9M/66.1M [00:01<00:01, 31.5MB/s]     41%|███████████████▎                     | 27.3M/66.1M [00:01<00:01, 32.4MB/s]     47%|█████████████████▎                   | 30.9M/66.1M [00:01<00:01, 33.3MB/s]     52%|███████████████████▏                 | 34.4M/66.1M [00:01<00:00, 33.7MB/s]     57%|█████████████████████▏               | 37.8M/66.1M [00:01<00:00, 33.8MB/s]     63%|███████████████████████▏             | 41.4M/66.1M [00:01<00:00, 34.2MB/s]     68%|█████████████████████████            | 44.8M/66.1M [00:01<00:00, 34.0MB/s]     74%|███████████████████████████▎         | 48.9M/66.1M [00:02<00:00, 36.0MB/s]     79%|█████████████████████████████▍       | 52.5M/66.1M [00:02<00:00, 35.9MB/s]     85%|███████████████████████████████▍     | 56.2M/66.1M [00:02<00:00, 36.1MB/s]     90%|█████████████████████████████████▍   | 59.8M/66.1M [00:02<00:00, 35.4MB/s]     96%|███████████████████████████████████▍ | 63.3M/66.1M [00:02<00:00, 33.6MB/s]      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 66.1M/66.1M [00:00<00:00, 326GB/s]






|

.. code-block:: Python


    import hyperspy.api as hs

    s = hs.load("coreloss_spectrum.msa", signal_type="EELS")
    ll = hs.load("lowloss_spectrum.msa", signal_type="EELS")

    s.add_elements(("Mn", "O"))
    s.set_microscope_parameters(
        beam_energy=300, convergence_angle=24.6, collection_angle=13.6
    )

    m = s.create_model(low_loss=ll)
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()

    # one can also use the Dirac GOS by specifying the GOS parameter
    m = s.create_model(low_loss=ll, GOS="dirac")
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 13.230 seconds)


.. _sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: EELS_curve_fitting.ipynb <EELS_curve_fitting.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: EELS_curve_fitting.py <EELS_curve_fitting.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: EELS_curve_fitting.zip <EELS_curve_fitting.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
