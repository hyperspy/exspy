
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/model_fitting/EELS_curve_fitting.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_model_fitting_EELS_curve_fitting.py:


EELS curve fitting
==================

Performs curve fitting to an EELS spectrum, plots the result and saves it as
png file.

.. GENERATED FROM PYTHON SOURCE LINES 10-32



.. image-sg:: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :alt: coreloss_spectrum Signal
   :srcset: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]      0%|                                     | 10.2k/42.3M [00:00<10:00, 70.4kB/s]      0%|                                      | 58.4k/42.3M [00:00<02:47, 252kB/s]      0%|                                       | 135k/42.3M [00:00<01:39, 422kB/s]      1%|▎                                      | 296k/42.3M [00:00<00:53, 781kB/s]      1%|▌                                     | 603k/42.3M [00:00<00:29, 1.41MB/s]      3%|█                                    | 1.24M/42.3M [00:00<00:14, 2.75MB/s]      6%|██▏                                  | 2.50M/42.3M [00:00<00:07, 5.26MB/s]     12%|████▎                                | 4.88M/42.3M [00:00<00:03, 10.4MB/s]     18%|██████▌                              | 7.44M/42.3M [00:01<00:02, 14.5MB/s]     24%|████████▉                            | 10.2M/42.3M [00:01<00:01, 17.4MB/s]     32%|███████████▊                         | 13.5M/42.3M [00:01<00:01, 20.7MB/s]     39%|██████████████▎                      | 16.3M/42.3M [00:01<00:01, 21.6MB/s]     46%|████████████████▊                    | 19.3M/42.3M [00:01<00:01, 22.7MB/s]     53%|███████████████████▍                 | 22.2M/42.3M [00:01<00:00, 23.4MB/s]     60%|██████████████████████▏              | 25.3M/42.3M [00:01<00:00, 24.3MB/s]     68%|█████████████████████████            | 28.6M/42.3M [00:01<00:00, 25.3MB/s]     75%|███████████████████████████▋         | 31.7M/42.3M [00:02<00:00, 25.6MB/s]     82%|██████████████████████████████▎      | 34.7M/42.3M [00:02<00:00, 25.4MB/s]     91%|█████████████████████████████████▋   | 38.5M/42.3M [00:02<00:00, 27.3MB/s]     99%|████████████████████████████████████▍| 41.7M/42.3M [00:02<00:00, 27.0MB/s]      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 42.3M/42.3M [00:00<00:00, 284GB/s]
      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]      0%|                                     | 14.3k/66.1M [00:00<11:16, 97.7kB/s]      0%|                                      | 57.3k/66.1M [00:00<04:35, 240kB/s]      0%|                                       | 134k/66.1M [00:00<02:38, 417kB/s]      0%|▏                                      | 290k/66.1M [00:00<01:26, 761kB/s]      1%|▎                                     | 616k/66.1M [00:00<00:44, 1.47MB/s]      2%|▋                                    | 1.25M/66.1M [00:00<00:23, 2.78MB/s]      4%|█▍                                   | 2.53M/66.1M [00:00<00:11, 5.37MB/s]      8%|██▊                                  | 5.08M/66.1M [00:00<00:05, 10.5MB/s]     13%|████▋                                | 8.37M/66.1M [00:01<00:03, 15.8MB/s]     17%|██████▍                              | 11.4M/66.1M [00:01<00:02, 18.7MB/s]     22%|████████                             | 14.5M/66.1M [00:01<00:02, 20.8MB/s]     28%|██████████▏                          | 18.2M/66.1M [00:01<00:01, 24.0MB/s]     33%|████████████                         | 21.5M/66.1M [00:01<00:01, 25.2MB/s]     37%|█████████████▋                       | 24.5M/66.1M [00:01<00:01, 25.3MB/s]     42%|███████████████▍                     | 27.6M/66.1M [00:01<00:01, 25.6MB/s]     47%|█████████████████▍                   | 31.2M/66.1M [00:01<00:01, 27.0MB/s]     52%|███████████████████▏                 | 34.4M/66.1M [00:02<00:01, 26.9MB/s]     56%|████████████████████▉                | 37.3M/66.1M [00:02<00:01, 26.4MB/s]     62%|███████████████████████              | 41.3M/66.1M [00:02<00:00, 25.5MB/s]     67%|████████████████████████▊            | 44.3M/66.1M [00:02<00:00, 25.6MB/s]     71%|██████████████████████████▎          | 47.1M/66.1M [00:02<00:00, 24.9MB/s]     76%|████████████████████████████▎        | 50.5M/66.1M [00:02<00:00, 26.1MB/s]     81%|█████████████████████████████▉       | 53.4M/66.1M [00:02<00:00, 25.6MB/s]     86%|███████████████████████████████▋     | 56.7M/66.1M [00:02<00:00, 26.2MB/s]     90%|█████████████████████████████████▍   | 59.7M/66.1M [00:03<00:00, 26.0MB/s]     95%|██████████████████████████████████▉  | 62.5M/66.1M [00:03<00:00, 25.2MB/s]    100%|████████████████████████████████████▉| 66.0M/66.1M [00:03<00:00, 26.5MB/s]      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 66.1M/66.1M [00:00<00:00, 456GB/s]






|

.. code-block:: Python


    import hyperspy.api as hs

    s = hs.load("coreloss_spectrum.msa", signal_type="EELS")
    low_loss = hs.load("lowloss_spectrum.msa", signal_type="EELS")

    s.add_elements(("Mn", "O"))
    s.set_microscope_parameters(
        beam_energy=300, convergence_angle=24.6, collection_angle=13.6
    )

    m = s.create_model(low_loss=low_loss)
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()

    # one can also use the Dirac GOS by specifying the GOS parameter
    m = s.create_model(low_loss=low_loss, GOS="dirac")
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 15.015 seconds)


.. _sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: EELS_curve_fitting.ipynb <EELS_curve_fitting.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: EELS_curve_fitting.py <EELS_curve_fitting.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: EELS_curve_fitting.zip <EELS_curve_fitting.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
