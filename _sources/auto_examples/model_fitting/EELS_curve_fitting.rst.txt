
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/model_fitting/EELS_curve_fitting.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_model_fitting_EELS_curve_fitting.py:


EELS curve fitting
==================

Performs curve fitting to an EELS spectrum, plots the result and saves it as
png file.

.. GENERATED FROM PYTHON SOURCE LINES 10-32



.. image-sg:: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :alt: coreloss_spectrum Signal
   :srcset: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]      0%|                                      | 16.4k/42.3M [00:00<05:11, 136kB/s]      0%|                                      | 56.3k/42.3M [00:00<02:46, 253kB/s]      0%|▏                                      | 137k/42.3M [00:00<01:33, 449kB/s]      1%|▎                                      | 295k/42.3M [00:00<00:52, 797kB/s]      1%|▌                                     | 610k/42.3M [00:00<00:28, 1.47MB/s]      3%|█                                    | 1.23M/42.3M [00:00<00:14, 2.75MB/s]      6%|██▏                                  | 2.49M/42.3M [00:00<00:07, 5.33MB/s]     12%|████▍                                | 5.01M/42.3M [00:00<00:03, 10.4MB/s]     19%|███████▏                             | 8.21M/42.3M [00:01<00:02, 15.5MB/s]     26%|█████████▋                           | 11.1M/42.3M [00:01<00:01, 18.2MB/s]     34%|████████████▍                        | 14.2M/42.3M [00:01<00:01, 20.5MB/s]     41%|███████████████▏                     | 17.3M/42.3M [00:01<00:01, 22.4MB/s]     49%|██████████████████                   | 20.6M/42.3M [00:01<00:00, 23.9MB/s]     57%|█████████████████████                | 24.0M/42.3M [00:01<00:00, 25.5MB/s]     65%|████████████████████████▏            | 27.6M/42.3M [00:01<00:00, 26.9MB/s]     75%|███████████████████████████▌         | 31.5M/42.3M [00:01<00:00, 27.5MB/s]     84%|██████████████████████████████▉      | 35.4M/42.3M [00:02<00:00, 28.6MB/s]     92%|█████████████████████████████████▉   | 38.7M/42.3M [00:02<00:00, 28.3MB/s]     99%|████████████████████████████████████▋| 41.9M/42.3M [00:02<00:00, 27.7MB/s]      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 42.3M/42.3M [00:00<00:00, 254GB/s]
      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]      0%|                                      | 12.3k/66.1M [00:00<09:13, 119kB/s]      0%|                                      | 46.1k/66.1M [00:00<04:57, 222kB/s]      0%|                                       | 110k/66.1M [00:00<02:58, 369kB/s]      0%|▏                                      | 248k/66.1M [00:00<01:35, 689kB/s]      1%|▎                                     | 522k/66.1M [00:00<00:51, 1.28MB/s]      2%|▌                                    | 1.06M/66.1M [00:00<00:27, 2.40MB/s]      3%|█▏                                   | 2.16M/66.1M [00:00<00:13, 4.64MB/s]      7%|██▍                                  | 4.35M/66.1M [00:00<00:06, 9.05MB/s]     11%|████                                 | 7.18M/66.1M [00:01<00:04, 13.7MB/s]     15%|█████▌                               | 10.0M/66.1M [00:01<00:03, 16.9MB/s]     20%|███████▎                             | 13.0M/66.1M [00:01<00:02, 19.3MB/s]     24%|████████▉                            | 16.0M/66.1M [00:01<00:02, 21.2MB/s]     29%|██████████▊                          | 19.3M/66.1M [00:01<00:02, 23.1MB/s]     33%|████████████▍                        | 22.1M/66.1M [00:01<00:01, 23.4MB/s]     38%|██████████████                       | 25.0M/66.1M [00:01<00:01, 23.7MB/s]     42%|███████████████▌                     | 27.8M/66.1M [00:01<00:01, 23.6MB/s]     47%|█████████████████▎                   | 30.9M/66.1M [00:02<00:01, 24.1MB/s]     52%|███████████████████▏                 | 34.2M/66.1M [00:02<00:01, 24.9MB/s]     56%|████████████████████▊                | 37.3M/66.1M [00:02<00:01, 25.3MB/s]     61%|██████████████████████▍              | 40.1M/66.1M [00:02<00:01, 24.7MB/s]     66%|████████████████████████▎            | 43.4M/66.1M [00:02<00:00, 25.8MB/s]     70%|█████████████████████████▊           | 46.2M/66.1M [00:02<00:00, 25.1MB/s]     75%|███████████████████████████▋         | 49.5M/66.1M [00:02<00:00, 25.8MB/s]     79%|█████████████████████████████▎       | 52.4M/66.1M [00:02<00:00, 25.4MB/s]     84%|██████████████████████████████▉      | 55.3M/66.1M [00:02<00:00, 24.5MB/s]     89%|████████████████████████████████▉    | 58.8M/66.1M [00:03<00:00, 25.9MB/s]     93%|██████████████████████████████████▍  | 61.6M/66.1M [00:03<00:00, 25.2MB/s]     97%|████████████████████████████████████ | 64.3M/66.1M [00:03<00:00, 24.5MB/s]      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 66.1M/66.1M [00:00<00:00, 454GB/s]






|

.. code-block:: Python


    import hyperspy.api as hs

    s = hs.load("coreloss_spectrum.msa", signal_type="EELS")
    ll = hs.load("lowloss_spectrum.msa", signal_type="EELS")

    s.add_elements(("Mn", "O"))
    s.set_microscope_parameters(
        beam_energy=300, convergence_angle=24.6, collection_angle=13.6
    )

    m = s.create_model(low_loss=ll)
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()

    # one can also use the Dirac GOS by specifying the GOS parameter
    m = s.create_model(low_loss=ll, GOS="dirac")
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 14.881 seconds)


.. _sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: EELS_curve_fitting.ipynb <EELS_curve_fitting.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: EELS_curve_fitting.py <EELS_curve_fitting.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: EELS_curve_fitting.zip <EELS_curve_fitting.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
