
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/model_fitting/EELS_curve_fitting.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_model_fitting_EELS_curve_fitting.py:


EELS curve fitting
==================

Performs curve fitting to an EELS spectrum, plots the result and saves it as
png file.

.. GENERATED FROM PYTHON SOURCE LINES 10-32



.. image-sg:: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :alt: coreloss_spectrum Signal
   :srcset: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]      0%|                                      | 16.4k/42.3M [00:00<04:53, 144kB/s]      0%|                                      | 39.9k/42.3M [00:00<03:47, 186kB/s]      0%|                                       | 121k/42.3M [00:00<01:37, 432kB/s]      1%|▏                                      | 266k/42.3M [00:00<00:54, 775kB/s]      1%|▌                                     | 560k/42.3M [00:00<00:28, 1.44MB/s]      3%|█                                    | 1.17M/42.3M [00:00<00:14, 2.78MB/s]      6%|██                                   | 2.34M/42.3M [00:00<00:07, 5.30MB/s]     11%|████                                 | 4.71M/42.3M [00:00<00:03, 10.4MB/s]     18%|██████▊                              | 7.72M/42.3M [00:01<00:02, 15.5MB/s]     24%|████████▉                            | 10.2M/42.3M [00:01<00:01, 16.3MB/s]     28%|██████████▎                          | 11.8M/42.3M [00:01<00:02, 14.7MB/s]     34%|████████████▌                        | 14.3M/42.3M [00:01<00:01, 17.1MB/s]     40%|██████████████▊                      | 16.9M/42.3M [00:01<00:01, 18.8MB/s]     46%|████████████████▉                    | 19.3M/42.3M [00:01<00:01, 19.7MB/s]     52%|███████████████████                  | 21.8M/42.3M [00:01<00:01, 20.4MB/s]     58%|█████████████████████▎               | 24.3M/42.3M [00:01<00:00, 21.1MB/s]     64%|███████████████████████▌             | 26.9M/42.3M [00:01<00:00, 21.7MB/s]     70%|█████████████████████████▋           | 29.4M/42.3M [00:02<00:00, 21.9MB/s]     76%|████████████████████████████         | 32.0M/42.3M [00:02<00:00, 22.2MB/s]     82%|██████████████████████████████▎      | 34.6M/42.3M [00:02<00:00, 22.6MB/s]     88%|████████████████████████████████▋    | 37.4M/42.3M [00:02<00:00, 23.1MB/s]     95%|██████████████████████████████████▉  | 40.0M/42.3M [00:02<00:00, 22.8MB/s]      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 42.3M/42.3M [00:00<00:00, 185GB/s]
      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]      0%|                                      | 16.4k/66.1M [00:00<07:28, 147kB/s]      0%|                                      | 48.1k/66.1M [00:00<04:50, 227kB/s]      0%|                                       | 126k/66.1M [00:00<02:29, 440kB/s]      0%|▏                                      | 265k/66.1M [00:00<01:27, 756kB/s]      1%|▎                                     | 570k/66.1M [00:00<00:44, 1.46MB/s]      2%|▋                                    | 1.16M/66.1M [00:00<00:23, 2.75MB/s]      4%|█▎                                   | 2.34M/66.1M [00:00<00:12, 5.27MB/s]      7%|██▋                                  | 4.72M/66.1M [00:00<00:05, 10.4MB/s]     10%|███▋                                 | 6.70M/66.1M [00:01<00:04, 12.6MB/s]     14%|█████                                | 8.95M/66.1M [00:01<00:03, 14.9MB/s]     17%|██████▏                              | 11.0M/66.1M [00:01<00:03, 16.0MB/s]     20%|███████▍                             | 13.3M/66.1M [00:01<00:03, 17.2MB/s]     23%|████████▋                            | 15.4M/66.1M [00:01<00:02, 17.8MB/s]     27%|█████████▊                           | 17.6M/66.1M [00:01<00:02, 18.1MB/s]     30%|███████████                          | 19.8M/66.1M [00:01<00:02, 18.6MB/s]     33%|████████████▏                        | 21.8M/66.1M [00:01<00:02, 17.9MB/s]     36%|█████████████▍                       | 23.9M/66.1M [00:01<00:02, 18.3MB/s]     39%|██████████████▍                      | 25.9M/66.1M [00:02<00:02, 18.0MB/s]     42%|███████████████▋                     | 28.1M/66.1M [00:02<00:02, 18.5MB/s]     46%|████████████████▊                    | 30.1M/66.1M [00:02<00:01, 18.3MB/s]     49%|██████████████████                   | 32.3M/66.1M [00:02<00:01, 18.6MB/s]     52%|███████████████████▎                 | 34.4M/66.1M [00:02<00:01, 18.8MB/s]     55%|████████████████████▍                | 36.6M/66.1M [00:02<00:01, 19.0MB/s]     59%|█████████████████████▋               | 38.8M/66.1M [00:02<00:01, 19.3MB/s]     62%|██████████████████████▉              | 41.0M/66.1M [00:02<00:01, 19.4MB/s]     66%|████████████████████████▏            | 43.3M/66.1M [00:02<00:01, 19.6MB/s]     69%|█████████████████████████▍           | 45.5M/66.1M [00:03<00:01, 19.6MB/s]     72%|██████████████████████████▊          | 47.8M/66.1M [00:03<00:00, 19.9MB/s]     76%|███████████████████████████▉         | 50.0M/66.1M [00:03<00:00, 19.8MB/s]     79%|█████████████████████████████▎       | 52.3M/66.1M [00:03<00:00, 19.9MB/s]     83%|██████████████████████████████▌      | 54.5M/66.1M [00:03<00:00, 20.0MB/s]     86%|███████████████████████████████▊     | 56.8M/66.1M [00:03<00:00, 20.0MB/s]     89%|█████████████████████████████████    | 59.1M/66.1M [00:03<00:00, 19.8MB/s]     93%|██████████████████████████████████▎  | 61.3M/66.1M [00:03<00:00, 20.0MB/s]     96%|███████████████████████████████████▍ | 63.4M/66.1M [00:03<00:00, 19.4MB/s]     99%|████████████████████████████████████▋| 65.6M/66.1M [00:04<00:00, 19.6MB/s]      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 66.1M/66.1M [00:00<00:00, 353GB/s]






|

.. code-block:: Python


    import hyperspy.api as hs

    s = hs.load("coreloss_spectrum.msa", signal_type="EELS")
    ll = hs.load("lowloss_spectrum.msa", signal_type="EELS")

    s.add_elements(("Mn", "O"))
    s.set_microscope_parameters(
        beam_energy=300, convergence_angle=24.6, collection_angle=13.6
    )

    m = s.create_model(low_loss=ll)
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()

    # one can also use the Dirac GOS by specifying the GOS parameter
    m = s.create_model(low_loss=ll, GOS="dirac")
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 18.439 seconds)


.. _sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: EELS_curve_fitting.ipynb <EELS_curve_fitting.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: EELS_curve_fitting.py <EELS_curve_fitting.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: EELS_curve_fitting.zip <EELS_curve_fitting.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
