
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/model_fitting/EELS_curve_fitting.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_model_fitting_EELS_curve_fitting.py:


EELS curve fitting
==================

Performs curve fitting to an EELS spectrum, plots the result and saves it as
png file.

.. GENERATED FROM PYTHON SOURCE LINES 10-32



.. image-sg:: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :alt: coreloss_spectrum Signal
   :srcset: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]      0%|                                      | 14.3k/42.3M [00:00<06:38, 106kB/s]      0%|                                       | 111k/42.3M [00:00<01:37, 433kB/s]      1%|▎                                      | 274k/42.3M [00:00<00:48, 866kB/s]      1%|▌                                     | 617k/42.3M [00:00<00:26, 1.55MB/s]      3%|█▏                                   | 1.42M/42.3M [00:00<00:11, 3.49MB/s]      7%|██▍                                  | 2.79M/42.3M [00:00<00:05, 6.59MB/s]     13%|████▊                                | 5.54M/42.3M [00:00<00:02, 12.9MB/s]     21%|███████▊                             | 8.94M/42.3M [00:00<00:01, 19.2MB/s]     27%|██████████▏                          | 11.6M/42.3M [00:01<00:01, 21.4MB/s]     36%|█████████████▏                       | 15.0M/42.3M [00:01<00:01, 25.2MB/s]     43%|███████████████▋                     | 18.0M/42.3M [00:01<00:00, 26.6MB/s]     51%|██████████████████▉                  | 21.7M/42.3M [00:01<00:00, 29.7MB/s]     60%|██████████████████████               | 25.3M/42.3M [00:01<00:00, 31.4MB/s]     69%|█████████████████████████▋           | 29.4M/42.3M [00:01<00:00, 32.7MB/s]     79%|█████████████████████████████▏       | 33.4M/42.3M [00:01<00:00, 33.0MB/s]     88%|████████████████████████████████▍    | 37.1M/42.3M [00:01<00:00, 33.9MB/s]     96%|███████████████████████████████████▌ | 40.6M/42.3M [00:01<00:00, 34.3MB/s]      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 42.3M/42.3M [00:00<00:00, 192GB/s]
      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]      0%|                                      | 19.5k/66.1M [00:00<07:03, 156kB/s]      0%|                                       | 111k/66.1M [00:00<02:31, 434kB/s]      0%|▏                                      | 274k/66.1M [00:00<01:17, 850kB/s]      1%|▎                                     | 614k/66.1M [00:00<00:41, 1.57MB/s]      2%|▊                                    | 1.41M/66.1M [00:00<00:18, 3.53MB/s]      4%|█▌                                   | 2.88M/66.1M [00:00<00:09, 6.95MB/s]      9%|███▏                                 | 5.63M/66.1M [00:00<00:04, 13.2MB/s]     14%|█████                                | 9.13M/66.1M [00:00<00:02, 19.8MB/s]     19%|██████▉                              | 12.4M/66.1M [00:01<00:02, 23.7MB/s]     25%|█████████                            | 16.2M/66.1M [00:01<00:01, 28.0MB/s]     30%|██████████▉                          | 19.6M/66.1M [00:01<00:01, 29.9MB/s]     35%|████████████▊                        | 22.9M/66.1M [00:01<00:01, 30.8MB/s]     40%|██████████████▊                      | 26.6M/66.1M [00:01<00:01, 32.4MB/s]     45%|████████████████▊                    | 30.0M/66.1M [00:01<00:01, 30.1MB/s]     51%|██████████████████▉                  | 33.9M/66.1M [00:01<00:00, 32.6MB/s]     57%|█████████████████████                | 37.7M/66.1M [00:01<00:00, 31.7MB/s]     62%|██████████████████████▉              | 40.9M/66.1M [00:01<00:00, 31.7MB/s]     67%|████████████████████████▉            | 44.6M/66.1M [00:01<00:00, 33.1MB/s]     73%|██████████████████████████▉          | 48.2M/66.1M [00:02<00:00, 33.9MB/s]     78%|████████████████████████████▉        | 51.6M/66.1M [00:02<00:00, 33.7MB/s]     83%|██████████████████████████████▊      | 55.0M/66.1M [00:02<00:00, 33.7MB/s]     89%|████████████████████████████████▉    | 58.8M/66.1M [00:02<00:00, 35.0MB/s]     94%|██████████████████████████████████▉  | 62.5M/66.1M [00:02<00:00, 35.5MB/s]    100%|████████████████████████████████████▉| 66.0M/66.1M [00:02<00:00, 35.0MB/s]      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 66.1M/66.1M [00:00<00:00, 441GB/s]






|

.. code-block:: Python


    import hyperspy.api as hs

    s = hs.load("coreloss_spectrum.msa", signal_type="EELS")
    ll = hs.load("lowloss_spectrum.msa", signal_type="EELS")

    s.add_elements(("Mn", "O"))
    s.set_microscope_parameters(
        beam_energy=300, convergence_angle=24.6, collection_angle=13.6
    )

    m = s.create_model(low_loss=ll)
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()

    # one can also use the Dirac GOS by specifying the GOS parameter
    m = s.create_model(low_loss=ll, GOS="dirac")
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 13.471 seconds)


.. _sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: EELS_curve_fitting.ipynb <EELS_curve_fitting.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: EELS_curve_fitting.py <EELS_curve_fitting.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: EELS_curve_fitting.zip <EELS_curve_fitting.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
