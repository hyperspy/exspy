
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/model_fitting/EELS_curve_fitting.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_model_fitting_EELS_curve_fitting.py:


EELS curve fitting
==================

Performs curve fitting to an EELS spectrum, plots the result and saves it as
png file.

.. GENERATED FROM PYTHON SOURCE LINES 10-32



.. image-sg:: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :alt: coreloss_spectrum Signal
   :srcset: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]      0%|                                     | 17.4k/42.3M [00:00<07:40, 91.7kB/s]      0%|                                      | 56.3k/42.3M [00:00<04:03, 174kB/s]      0%|▏                                      | 138k/42.3M [00:00<02:11, 320kB/s]      1%|▎                                      | 283k/42.3M [00:00<01:17, 541kB/s]      1%|▌                                     | 616k/42.3M [00:00<00:38, 1.08MB/s]      3%|█                                    | 1.25M/42.3M [00:00<00:20, 2.05MB/s]      6%|██▏                                  | 2.53M/42.3M [00:01<00:10, 3.94MB/s]     12%|████▍                                | 5.08M/42.3M [00:01<00:04, 7.69MB/s]     19%|███████▏                             | 8.20M/42.3M [00:01<00:03, 11.3MB/s]     26%|█████████▋                           | 11.0M/42.3M [00:01<00:02, 13.2MB/s]     33%|████████████                         | 13.7M/42.3M [00:01<00:01, 14.3MB/s]     39%|██████████████▏                      | 16.3M/42.3M [00:01<00:01, 14.7MB/s]     45%|████████████████▌                    | 19.0M/42.3M [00:02<00:01, 15.4MB/s]     52%|███████████████████▏                 | 21.9M/42.3M [00:02<00:01, 16.1MB/s]     59%|█████████████████████▋               | 24.7M/42.3M [00:02<00:01, 16.6MB/s]     65%|████████████████████████             | 27.5M/42.3M [00:02<00:00, 16.7MB/s]     71%|██████████████████████████▍          | 30.2M/42.3M [00:02<00:00, 16.7MB/s]     78%|████████████████████████████▉        | 33.0M/42.3M [00:02<00:00, 16.9MB/s]     85%|███████████████████████████████▎     | 35.8M/42.3M [00:03<00:00, 17.1MB/s]     91%|█████████████████████████████████▊   | 38.7M/42.3M [00:03<00:00, 17.2MB/s]     98%|████████████████████████████████████▎| 41.5M/42.3M [00:03<00:00, 17.2MB/s]      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 42.3M/42.3M [00:00<00:00, 318GB/s]
      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]      0%|                                     | 12.3k/66.1M [00:00<14:28, 76.1kB/s]      0%|                                      | 48.1k/66.1M [00:00<07:48, 141kB/s]      0%|                                       | 126k/66.1M [00:00<03:27, 318kB/s]      0%|▏                                      | 245k/66.1M [00:00<01:54, 574kB/s]      0%|▏                                      | 314k/66.1M [00:00<01:48, 604kB/s]      1%|▎                                     | 559k/66.1M [00:00<01:00, 1.08MB/s]      2%|▌                                    | 1.07M/66.1M [00:00<00:29, 2.24MB/s]      2%|▋                                    | 1.32M/66.1M [00:01<00:28, 2.27MB/s]      4%|█▎                                   | 2.33M/66.1M [00:01<00:14, 4.27MB/s]      7%|██▍                                  | 4.32M/66.1M [00:01<00:07, 8.68MB/s]      8%|██▉                                  | 5.24M/66.1M [00:01<00:06, 8.70MB/s]     11%|████▏                                | 7.56M/66.1M [00:01<00:04, 12.2MB/s]     14%|█████                                | 8.98M/66.1M [00:01<00:04, 12.7MB/s]     16%|██████                               | 10.8M/66.1M [00:01<00:03, 14.4MB/s]     19%|███████                              | 12.6M/66.1M [00:01<00:03, 14.2MB/s]     22%|████████▏                            | 14.5M/66.1M [00:01<00:03, 15.7MB/s]     24%|█████████                            | 16.1M/66.1M [00:01<00:03, 15.8MB/s]     27%|██████████                           | 17.9M/66.1M [00:02<00:03, 15.4MB/s]     30%|███████████                          | 19.8M/66.1M [00:02<00:02, 16.2MB/s]     32%|███████████▉                         | 21.4M/66.1M [00:02<00:02, 16.2MB/s]     35%|█████████████                        | 23.3M/66.1M [00:02<00:02, 15.9MB/s]     38%|█████████████▉                       | 25.0M/66.1M [00:02<00:02, 16.1MB/s]     41%|███████████████                      | 26.9M/66.1M [00:02<00:02, 17.0MB/s]     43%|████████████████                     | 28.6M/66.1M [00:02<00:02, 15.9MB/s]     46%|█████████████████                    | 30.5M/66.1M [00:02<00:02, 16.6MB/s]     49%|██████████████████                   | 32.3M/66.1M [00:02<00:01, 17.0MB/s]     51%|███████████████████                  | 34.0M/66.1M [00:03<00:02, 16.0MB/s]     54%|████████████████████                 | 35.8M/66.1M [00:03<00:01, 16.6MB/s]     57%|█████████████████████                | 37.6M/66.1M [00:03<00:01, 16.9MB/s]     59%|█████████████████████▉               | 39.3M/66.1M [00:03<00:01, 16.0MB/s]     62%|██████████████████████▉              | 41.1M/66.1M [00:03<00:01, 16.3MB/s]     65%|████████████████████████             | 43.0M/66.1M [00:03<00:01, 17.2MB/s]     68%|█████████████████████████            | 44.8M/66.1M [00:03<00:01, 16.2MB/s]     70%|██████████████████████████           | 46.5M/66.1M [00:03<00:01, 16.4MB/s]     73%|███████████████████████████▏         | 48.5M/66.1M [00:03<00:01, 17.4MB/s]     76%|████████████████████████████         | 50.2M/66.1M [00:04<00:00, 16.4MB/s]     79%|█████████████████████████████        | 51.9M/66.1M [00:04<00:00, 16.4MB/s]     82%|██████████████████████████████▏      | 53.9M/66.1M [00:04<00:00, 17.5MB/s]     84%|███████████████████████████████▏     | 55.7M/66.1M [00:04<00:00, 16.5MB/s]     87%|████████████████████████████████     | 57.4M/66.1M [00:04<00:00, 16.3MB/s]     90%|█████████████████████████████████▍   | 59.7M/66.1M [00:04<00:00, 18.2MB/s]     93%|██████████████████████████████████▍  | 61.5M/66.1M [00:04<00:00, 17.1MB/s]     96%|███████████████████████████████████▍ | 63.3M/66.1M [00:04<00:00, 17.0MB/s]     99%|████████████████████████████████████▋| 65.4M/66.1M [00:04<00:00, 18.4MB/s]      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 66.1M/66.1M [00:00<00:00, 484GB/s]






|

.. code-block:: Python


    import hyperspy.api as hs

    s = hs.load("coreloss_spectrum.msa", signal_type="EELS")
    ll = hs.load("lowloss_spectrum.msa", signal_type="EELS")

    s.add_elements(("Mn", "O"))
    s.set_microscope_parameters(
        beam_energy=300, convergence_angle=24.6, collection_angle=13.6
    )

    m = s.create_model(low_loss=ll)
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()

    # one can also use the Dirac GOS by specifying the GOS parameter
    m = s.create_model(low_loss=ll, GOS="dirac")
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 21.900 seconds)


.. _sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: EELS_curve_fitting.ipynb <EELS_curve_fitting.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: EELS_curve_fitting.py <EELS_curve_fitting.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: EELS_curve_fitting.zip <EELS_curve_fitting.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
