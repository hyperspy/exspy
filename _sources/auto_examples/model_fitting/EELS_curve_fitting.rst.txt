
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/model_fitting/EELS_curve_fitting.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_model_fitting_EELS_curve_fitting.py:


EELS curve fitting
==================

Performs curve fitting to an EELS spectrum, plots the result and saves it as
png file.

.. GENERATED FROM PYTHON SOURCE LINES 10-32



.. image-sg:: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :alt: coreloss_spectrum Signal
   :srcset: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]      0%|                                      | 28.7k/42.3M [00:00<03:25, 206kB/s]      0%|                                      | 98.3k/42.3M [00:00<01:32, 454kB/s]      1%|▏                                      | 237k/42.3M [00:00<01:00, 693kB/s]      2%|▌                                     | 683k/42.3M [00:00<00:21, 1.94MB/s]      3%|█▎                                   | 1.43M/42.3M [00:00<00:10, 3.71MB/s]      6%|██▎                                  | 2.68M/42.3M [00:00<00:06, 6.46MB/s]     12%|████▎                                | 4.97M/42.3M [00:00<00:03, 11.6MB/s]     20%|███████▏                             | 8.28M/42.3M [00:00<00:01, 18.2MB/s]     27%|██████████▏                          | 11.6M/42.3M [00:00<00:01, 22.8MB/s]     36%|█████████████▎                       | 15.2M/42.3M [00:01<00:01, 26.8MB/s]     44%|████████████████▍                    | 18.8M/42.3M [00:01<00:00, 29.5MB/s]     52%|███████████████████▍                 | 22.1M/42.3M [00:01<00:00, 30.7MB/s]     60%|██████████████████████▎              | 25.5M/42.3M [00:01<00:00, 31.6MB/s]     69%|█████████████████████████▍           | 29.1M/42.3M [00:01<00:00, 32.9MB/s]     77%|████████████████████████████▌        | 32.6M/42.3M [00:01<00:00, 33.5MB/s]     85%|███████████████████████████████▌     | 36.1M/42.3M [00:01<00:00, 34.0MB/s]     94%|██████████████████████████████████▋  | 39.6M/42.3M [00:01<00:00, 34.2MB/s]      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 42.3M/42.3M [00:00<00:00, 203GB/s]
      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]      0%|                                     | 10.2k/66.1M [00:00<12:02, 91.5kB/s]      0%|                                      | 95.2k/66.1M [00:00<02:11, 504kB/s]      0%|▏                                      | 250k/66.1M [00:00<01:33, 706kB/s]      1%|▍                                     | 818k/66.1M [00:00<00:28, 2.27MB/s]      3%|█                                    | 1.81M/66.1M [00:00<00:13, 4.66MB/s]      5%|█▊                                   | 3.23M/66.1M [00:00<00:08, 7.57MB/s]      9%|███▏                                 | 5.79M/66.1M [00:00<00:04, 13.1MB/s]     14%|█████▏                               | 9.35M/66.1M [00:00<00:02, 19.9MB/s]     18%|██████▋                              | 12.0M/66.1M [00:00<00:02, 22.0MB/s]     23%|████████▍                            | 15.1M/66.1M [00:01<00:02, 20.6MB/s]     28%|██████████▎                          | 18.5M/66.1M [00:01<00:01, 24.0MB/s]     32%|███████████▉                         | 21.2M/66.1M [00:01<00:01, 25.0MB/s]     37%|█████████████▋                       | 24.5M/66.1M [00:01<00:01, 27.2MB/s]     42%|███████████████▍                     | 27.5M/66.1M [00:01<00:01, 28.0MB/s]     47%|█████████████████▏                   | 30.8M/66.1M [00:01<00:01, 29.3MB/s]     51%|██████████████████▉                  | 33.8M/66.1M [00:01<00:01, 29.5MB/s]     56%|████████████████████▋                | 37.0M/66.1M [00:01<00:01, 25.4MB/s]     61%|██████████████████████▍              | 40.1M/66.1M [00:02<00:00, 27.0MB/s]     65%|████████████████████████▏            | 43.1M/66.1M [00:02<00:00, 27.9MB/s]     70%|█████████████████████████▉           | 46.4M/66.1M [00:02<00:00, 29.2MB/s]     75%|███████████████████████████▋         | 49.5M/66.1M [00:02<00:00, 29.6MB/s]     80%|█████████████████████████████▍       | 52.7M/66.1M [00:02<00:00, 30.4MB/s]     85%|███████████████████████████████▍     | 56.2M/66.1M [00:02<00:00, 31.8MB/s]     90%|█████████████████████████████████▎   | 59.6M/66.1M [00:02<00:00, 32.5MB/s]     95%|███████████████████████████████████▏ | 62.9M/66.1M [00:02<00:00, 32.5MB/s]      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 66.1M/66.1M [00:00<00:00, 365GB/s]






|

.. code-block:: Python


    import hyperspy.api as hs

    s = hs.load("coreloss_spectrum.msa", signal_type="EELS")
    low_loss = hs.load("lowloss_spectrum.msa", signal_type="EELS")

    s.add_elements(("Mn", "O"))
    s.set_microscope_parameters(
        beam_energy=300, convergence_angle=24.6, collection_angle=13.6
    )

    m = s.create_model(low_loss=low_loss)
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()

    # one can also use the Dirac GOS by specifying the GOS parameter
    m = s.create_model(low_loss=low_loss, GOS="dirac")
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 13.453 seconds)


.. _sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: EELS_curve_fitting.ipynb <EELS_curve_fitting.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: EELS_curve_fitting.py <EELS_curve_fitting.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: EELS_curve_fitting.zip <EELS_curve_fitting.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
