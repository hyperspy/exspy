
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/model_fitting/EELS_curve_fitting.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_model_fitting_EELS_curve_fitting.py:


EELS curve fitting
==================

Performs curve fitting to an EELS spectrum, plots the result and saves it as
png file.

.. GENERATED FROM PYTHON SOURCE LINES 10-32



.. image-sg:: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :alt: coreloss_spectrum Signal
   :srcset: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]      0%|                                      | 15.4k/42.3M [00:00<05:12, 135kB/s]      0%|                                      | 36.9k/42.3M [00:00<04:10, 169kB/s]      0%|                                       | 104k/42.3M [00:00<01:55, 367kB/s]      1%|▏                                      | 254k/42.3M [00:00<00:56, 748kB/s]      1%|▍                                     | 526k/42.3M [00:00<00:30, 1.35MB/s]      3%|▉                                    | 1.07M/42.3M [00:00<00:16, 2.53MB/s]      5%|█▉                                   | 2.16M/42.3M [00:00<00:08, 4.90MB/s]     10%|███▊                                 | 4.36M/42.3M [00:00<00:03, 9.58MB/s]     18%|██████▌                              | 7.51M/42.3M [00:01<00:02, 15.2MB/s]     26%|█████████▌                           | 10.9M/42.3M [00:01<00:01, 19.5MB/s]     33%|████████████▎                        | 14.1M/42.3M [00:01<00:01, 22.1MB/s]     43%|███████████████▊                     | 18.1M/42.3M [00:01<00:00, 25.7MB/s]     49%|██████████████████▎                  | 20.9M/42.3M [00:01<00:00, 25.4MB/s]     58%|█████████████████████▌               | 24.6M/42.3M [00:01<00:00, 27.7MB/s]     65%|███████████████████████▉             | 27.3M/42.3M [00:01<00:00, 26.7MB/s]     73%|██████████████████████████▉          | 30.7M/42.3M [00:01<00:00, 27.8MB/s]     80%|█████████████████████████████▍       | 33.7M/42.3M [00:01<00:00, 27.5MB/s]     88%|████████████████████████████████▌    | 37.2M/42.3M [00:02<00:00, 28.6MB/s]     95%|███████████████████████████████████  | 40.1M/42.3M [00:02<00:00, 27.8MB/s]      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 42.3M/42.3M [00:00<00:00, 214GB/s]
      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]      0%|                                      | 15.4k/66.1M [00:00<08:21, 132kB/s]      0%|                                      | 44.0k/66.1M [00:00<05:29, 200kB/s]      0%|                                       | 117k/66.1M [00:00<02:46, 396kB/s]      0%|▏                                      | 251k/66.1M [00:00<01:34, 699kB/s]      1%|▎                                     | 528k/66.1M [00:00<00:49, 1.32MB/s]      2%|▌                                    | 1.07M/66.1M [00:00<00:26, 2.46MB/s]      3%|█▏                                   | 2.15M/66.1M [00:00<00:13, 4.72MB/s]      7%|██▍                                  | 4.31M/66.1M [00:00<00:06, 9.19MB/s]     11%|████▏                                | 7.38M/66.1M [00:01<00:04, 14.4MB/s]     17%|██████▍                              | 11.4M/66.1M [00:01<00:02, 20.3MB/s]     22%|████████▏                            | 14.7M/66.1M [00:01<00:02, 22.8MB/s]     27%|██████████                           | 17.9M/66.1M [00:01<00:01, 24.3MB/s]     31%|███████████▌                         | 20.6M/66.1M [00:01<00:01, 24.0MB/s]     36%|█████████████▎                       | 23.7M/66.1M [00:01<00:01, 24.9MB/s]     40%|██████████████▉                      | 26.6M/66.1M [00:01<00:01, 24.8MB/s]     46%|████████████████▊                    | 30.1M/66.1M [00:01<00:01, 26.6MB/s]     51%|██████████████████▊                  | 33.6M/66.1M [00:01<00:01, 27.6MB/s]     55%|████████████████████▍                | 36.6M/66.1M [00:02<00:01, 27.2MB/s]     60%|██████████████████████               | 39.3M/66.1M [00:02<00:01, 26.2MB/s]     66%|████████████████████████▎            | 43.4M/66.1M [00:02<00:00, 28.7MB/s]     72%|██████████████████████████▌          | 47.4M/66.1M [00:02<00:00, 29.8MB/s]     76%|████████████████████████████▎        | 50.5M/66.1M [00:02<00:00, 28.9MB/s]     81%|██████████████████████████████       | 53.6M/66.1M [00:02<00:00, 28.4MB/s]     86%|███████████████████████████████▋     | 56.7M/66.1M [00:02<00:00, 27.8MB/s]     91%|█████████████████████████████████▌   | 60.0M/66.1M [00:02<00:00, 28.0MB/s]     95%|███████████████████████████████████▏ | 62.8M/66.1M [00:03<00:00, 26.8MB/s]     99%|████████████████████████████████████▋| 65.6M/66.1M [00:03<00:00, 26.3MB/s]      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 66.1M/66.1M [00:00<00:00, 457GB/s]






|

.. code-block:: Python


    import hyperspy.api as hs

    s = hs.load("coreloss_spectrum.msa", signal_type="EELS")
    low_loss = hs.load("lowloss_spectrum.msa", signal_type="EELS")

    s.add_elements(("Mn", "O"))
    s.set_microscope_parameters(
        beam_energy=300, convergence_angle=24.6, collection_angle=13.6
    )

    m = s.create_model(low_loss=low_loss)
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()

    # one can also use the Dirac GOS by specifying the GOS parameter
    m = s.create_model(low_loss=low_loss, GOS="dirac")
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 14.996 seconds)


.. _sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: EELS_curve_fitting.ipynb <EELS_curve_fitting.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: EELS_curve_fitting.py <EELS_curve_fitting.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: EELS_curve_fitting.zip <EELS_curve_fitting.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
