
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/model_fitting/EELS_curve_fitting.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_model_fitting_EELS_curve_fitting.py:


EELS curve fitting
==================

Performs curve fitting to an EELS spectrum, plots the result and saves it as
png file.

.. GENERATED FROM PYTHON SOURCE LINES 10-32



.. image-sg:: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :alt: coreloss_spectrum Signal
   :srcset: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]      0%|                                      | 12.3k/42.3M [00:00<05:44, 123kB/s]      0%|                                       | 100k/42.3M [00:00<01:33, 452kB/s]      1%|▎                                      | 275k/42.3M [00:00<00:52, 807kB/s]      1%|▌                                     | 599k/42.3M [00:00<00:26, 1.59MB/s]      3%|█▏                                   | 1.30M/42.3M [00:00<00:12, 3.30MB/s]      6%|██▎                                  | 2.58M/42.3M [00:00<00:06, 6.24MB/s]     12%|████▎                                | 5.00M/42.3M [00:00<00:03, 11.7MB/s]     20%|███████▎                             | 8.38M/42.3M [00:00<00:01, 18.5MB/s]     27%|██████████                           | 11.5M/42.3M [00:00<00:01, 22.2MB/s]     35%|████████████▉                        | 14.8M/42.3M [00:01<00:01, 25.5MB/s]     42%|███████████████▍                     | 17.6M/42.3M [00:01<00:00, 26.4MB/s]     49%|██████████████████▎                  | 20.9M/42.3M [00:01<00:00, 28.4MB/s]     56%|████████████████████▊                | 23.8M/42.3M [00:01<00:00, 28.3MB/s]     63%|███████████████████████▎             | 26.7M/42.3M [00:01<00:00, 28.6MB/s]     71%|██████████████████████████▍          | 30.1M/42.3M [00:01<00:00, 30.4MB/s]     80%|█████████████████████████████▍       | 33.6M/42.3M [00:01<00:00, 31.7MB/s]     88%|████████████████████████████████▌    | 37.2M/42.3M [00:01<00:00, 32.8MB/s]     96%|███████████████████████████████████▍ | 40.5M/42.3M [00:01<00:00, 33.1MB/s]      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 42.3M/42.3M [00:00<00:00, 281GB/s]
      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]      0%|                                      | 19.5k/66.1M [00:00<06:44, 163kB/s]      0%|                                       | 115k/66.1M [00:00<02:22, 465kB/s]      0%|▏                                      | 273k/66.1M [00:00<01:20, 818kB/s]      1%|▎                                     | 607k/66.1M [00:00<00:42, 1.55MB/s]      2%|▋                                    | 1.29M/66.1M [00:00<00:20, 3.19MB/s]      4%|█▍                                   | 2.67M/66.1M [00:00<00:09, 6.41MB/s]      8%|██▉                                  | 5.27M/66.1M [00:00<00:04, 12.4MB/s]     13%|████▊                                | 8.65M/66.1M [00:00<00:03, 18.8MB/s]     17%|██████▍                              | 11.5M/66.1M [00:01<00:02, 21.8MB/s]     22%|████████▏                            | 14.6M/66.1M [00:01<00:02, 24.5MB/s]     26%|█████████▊                           | 17.5M/66.1M [00:01<00:01, 25.8MB/s]     31%|███████████▋                         | 20.8M/66.1M [00:01<00:01, 28.1MB/s]     36%|█████████████▍                       | 24.1M/66.1M [00:01<00:01, 29.6MB/s]     42%|███████████████▎                     | 27.4M/66.1M [00:01<00:01, 30.7MB/s]     46%|█████████████████▏                   | 30.7M/66.1M [00:01<00:01, 31.3MB/s]     51%|███████████████████                  | 34.0M/66.1M [00:01<00:01, 31.6MB/s]     57%|████████████████████▉                | 37.5M/66.1M [00:01<00:00, 32.5MB/s]     62%|██████████████████████▉              | 41.0M/66.1M [00:01<00:00, 32.9MB/s]     68%|█████████████████████████            | 44.8M/66.1M [00:02<00:00, 33.9MB/s]     73%|███████████████████████████          | 48.5M/66.1M [00:02<00:00, 34.4MB/s]     79%|█████████████████████████████        | 51.9M/66.1M [00:02<00:00, 34.1MB/s]     84%|██████████████████████████████▉      | 55.3M/66.1M [00:02<00:00, 34.0MB/s]     89%|████████████████████████████████▉    | 58.9M/66.1M [00:02<00:00, 34.7MB/s]     95%|███████████████████████████████████  | 62.6M/66.1M [00:02<00:00, 34.4MB/s]    100%|████████████████████████████████████▉| 66.1M/66.1M [00:02<00:00, 34.3MB/s]      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 66.1M/66.1M [00:00<00:00, 305GB/s]






|

.. code-block:: Python


    import hyperspy.api as hs

    s = hs.load("coreloss_spectrum.msa", signal_type="EELS")
    low_loss = hs.load("lowloss_spectrum.msa", signal_type="EELS")

    s.add_elements(("Mn", "O"))
    s.set_microscope_parameters(
        beam_energy=300, convergence_angle=24.6, collection_angle=13.6
    )

    m = s.create_model(low_loss=low_loss)
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()

    # one can also use the Dirac GOS by specifying the GOS parameter
    m = s.create_model(low_loss=low_loss, GOS="dirac")
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 13.692 seconds)


.. _sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: EELS_curve_fitting.ipynb <EELS_curve_fitting.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: EELS_curve_fitting.py <EELS_curve_fitting.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: EELS_curve_fitting.zip <EELS_curve_fitting.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
