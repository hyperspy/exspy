
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/model_fitting/EELS_curve_fitting.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_model_fitting_EELS_curve_fitting.py:


EELS curve fitting
==================

Performs curve fitting to an EELS spectrum, plots the result and saves it as
png file.

.. GENERATED FROM PYTHON SOURCE LINES 10-32



.. image-sg:: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :alt: coreloss_spectrum Signal
   :srcset: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]      0%|                                      | 14.3k/42.3M [00:00<05:52, 120kB/s]      0%|                                      | 58.4k/42.3M [00:00<02:37, 268kB/s]      0%|                                       | 125k/42.3M [00:00<01:44, 403kB/s]      1%|▎                                      | 289k/42.3M [00:00<00:53, 790kB/s]      1%|▌                                     | 600k/42.3M [00:00<00:28, 1.45MB/s]      3%|█                                    | 1.22M/42.3M [00:00<00:14, 2.74MB/s]      6%|██▏                                  | 2.48M/42.3M [00:00<00:07, 5.33MB/s]     12%|████▎                                | 4.98M/42.3M [00:00<00:03, 10.4MB/s]     19%|███████▏                             | 8.24M/42.3M [00:01<00:02, 15.6MB/s]     27%|██████████▏                          | 11.6M/42.3M [00:01<00:01, 19.6MB/s]     35%|█████████████                        | 14.9M/42.3M [00:01<00:01, 22.0MB/s]     43%|███████████████▊                     | 18.1M/42.3M [00:01<00:01, 23.6MB/s]     49%|██████████████████▎                  | 20.9M/42.3M [00:01<00:00, 23.6MB/s]     58%|█████████████████████▎               | 24.4M/42.3M [00:01<00:00, 25.4MB/s]     65%|████████████████████████             | 27.6M/42.3M [00:01<00:00, 25.9MB/s]     73%|██████████████████████████▉          | 30.8M/42.3M [00:01<00:00, 26.3MB/s]     80%|█████████████████████████████▌       | 33.8M/42.3M [00:02<00:00, 25.9MB/s]     88%|████████████████████████████████▌    | 37.3M/42.3M [00:02<00:00, 27.0MB/s]     95%|███████████████████████████████████▏ | 40.2M/42.3M [00:02<00:00, 26.4MB/s]      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 42.3M/42.3M [00:00<00:00, 183GB/s]
      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]      0%|                                      | 14.3k/66.1M [00:00<07:49, 141kB/s]      0%|                                      | 48.1k/66.1M [00:00<04:45, 231kB/s]      0%|                                       | 115k/66.1M [00:00<02:50, 388kB/s]      0%|▏                                      | 251k/66.1M [00:00<01:34, 695kB/s]      1%|▎                                     | 524k/66.1M [00:00<00:51, 1.28MB/s]      2%|▌                                    | 1.06M/66.1M [00:00<00:27, 2.41MB/s]      3%|█▏                                   | 2.16M/66.1M [00:00<00:13, 4.66MB/s]      7%|██▍                                  | 4.35M/66.1M [00:00<00:06, 9.09MB/s]     11%|████                                 | 7.24M/66.1M [00:01<00:04, 13.9MB/s]     15%|█████▍                               | 9.78M/66.1M [00:01<00:03, 16.2MB/s]     19%|███████▏                             | 12.9M/66.1M [00:01<00:02, 19.1MB/s]     24%|████████▉                            | 15.9M/66.1M [00:01<00:02, 21.0MB/s]     28%|██████████▌                          | 18.8M/66.1M [00:01<00:02, 22.1MB/s]     33%|████████████▏                        | 21.8M/66.1M [00:01<00:01, 23.0MB/s]     38%|█████████████▉                       | 24.8M/66.1M [00:01<00:01, 23.8MB/s]     42%|███████████████▌                     | 27.7M/66.1M [00:01<00:01, 23.5MB/s]     46%|█████████████████▏                   | 30.6M/66.1M [00:02<00:01, 23.7MB/s]     51%|██████████████████▊                  | 33.7M/66.1M [00:02<00:01, 24.5MB/s]     56%|████████████████████▌                | 36.7M/66.1M [00:02<00:01, 24.7MB/s]     60%|██████████████████████▎              | 39.9M/66.1M [00:02<00:01, 25.2MB/s]     65%|████████████████████████             | 43.0M/66.1M [00:02<00:00, 25.7MB/s]     70%|█████████████████████████▊           | 46.1M/66.1M [00:02<00:00, 25.7MB/s]     74%|███████████████████████████▌         | 49.2M/66.1M [00:02<00:00, 26.0MB/s]     79%|█████████████████████████████▏       | 52.3M/66.1M [00:02<00:00, 25.9MB/s]     83%|██████████████████████████████▊      | 55.1M/66.1M [00:02<00:00, 25.2MB/s]     88%|████████████████████████████████▌    | 58.2M/66.1M [00:03<00:00, 25.6MB/s]     93%|██████████████████████████████████▍  | 61.5M/66.1M [00:03<00:00, 26.3MB/s]     99%|████████████████████████████████████▌| 65.3M/66.1M [00:03<00:00, 28.0MB/s]      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 66.1M/66.1M [00:00<00:00, 330GB/s]






|

.. code-block:: Python


    import hyperspy.api as hs

    s = hs.load("coreloss_spectrum.msa", signal_type="EELS")
    low_loss = hs.load("lowloss_spectrum.msa", signal_type="EELS")

    s.add_elements(("Mn", "O"))
    s.set_microscope_parameters(
        beam_energy=300, convergence_angle=24.6, collection_angle=13.6
    )

    m = s.create_model(low_loss=low_loss)
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()

    # one can also use the Dirac GOS by specifying the GOS parameter
    m = s.create_model(low_loss=low_loss, GOS="dirac")
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 15.496 seconds)


.. _sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: EELS_curve_fitting.ipynb <EELS_curve_fitting.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: EELS_curve_fitting.py <EELS_curve_fitting.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: EELS_curve_fitting.zip <EELS_curve_fitting.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
