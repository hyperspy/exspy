
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/model_fitting/EELS_curve_fitting.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_model_fitting_EELS_curve_fitting.py:


EELS curve fitting
==================

Performs curve fitting to an EELS spectrum, plots the result and saves it as
png file.

.. GENERATED FROM PYTHON SOURCE LINES 10-32



.. image-sg:: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :alt: coreloss_spectrum Signal
   :srcset: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]      0%|                                      | 14.3k/42.3M [00:00<06:42, 105kB/s]      0%|                                      | 39.9k/42.3M [00:00<04:35, 153kB/s]      0%|                                       | 118k/42.3M [00:00<02:03, 342kB/s]      1%|▏                                      | 249k/42.3M [00:00<01:11, 584kB/s]      1%|▍                                     | 521k/42.3M [00:00<00:38, 1.09MB/s]      3%|▉                                    | 1.06M/42.3M [00:00<00:20, 2.06MB/s]      5%|█▊                                   | 2.14M/42.3M [00:00<00:10, 3.94MB/s]     10%|███▊                                 | 4.30M/42.3M [00:01<00:04, 7.67MB/s]     18%|██████▋                              | 7.62M/42.3M [00:01<00:02, 12.8MB/s]     25%|█████████▎                           | 10.7M/42.3M [00:01<00:02, 15.6MB/s]     32%|███████████▋                         | 13.4M/42.3M [00:01<00:01, 16.9MB/s]     40%|██████████████▊                      | 16.9M/42.3M [00:01<00:01, 19.4MB/s]     49%|█████████████████▉                   | 20.6M/42.3M [00:01<00:01, 20.9MB/s]     56%|████████████████████▉                | 23.9M/42.3M [00:01<00:00, 21.7MB/s]     63%|███████████████████████▍             | 26.8M/42.3M [00:02<00:00, 21.5MB/s]     71%|██████████████████████████           | 29.8M/42.3M [00:02<00:00, 21.7MB/s]     76%|████████████████████████████▎        | 32.3M/42.3M [00:02<00:00, 20.6MB/s]     85%|███████████████████████████████▍     | 35.9M/42.3M [00:02<00:00, 22.2MB/s]     91%|█████████████████████████████████▌   | 38.4M/42.3M [00:02<00:00, 21.1MB/s]     99%|████████████████████████████████████▌| 41.7M/42.3M [00:02<00:00, 22.0MB/s]      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 42.3M/42.3M [00:00<00:00, 263GB/s]
      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]      0%|                                   | 1.02k/66.1M [00:00<3:13:18, 5.70kB/s]      0%|                                     | 11.3k/66.1M [00:00<26:49, 41.1kB/s]      0%|                                      | 36.9k/66.1M [00:00<10:50, 102kB/s]      0%|                                       | 104k/66.1M [00:00<04:29, 245kB/s]      0%|▏                                      | 232k/66.1M [00:00<02:17, 479kB/s]      1%|▎                                      | 478k/66.1M [00:00<01:12, 902kB/s]      1%|▌                                     | 985k/66.1M [00:01<00:36, 1.77MB/s]      3%|█                                    | 1.98M/66.1M [00:01<00:18, 3.45MB/s]      6%|██▏                                  | 3.99M/66.1M [00:01<00:09, 6.82MB/s]     11%|███▉                                 | 7.13M/66.1M [00:01<00:05, 11.6MB/s]     14%|█████▎                               | 9.39M/66.1M [00:01<00:04, 12.9MB/s]     19%|██████▉                              | 12.4M/66.1M [00:01<00:03, 15.6MB/s]     23%|████████▌                            | 15.3M/66.1M [00:01<00:03, 16.9MB/s]     28%|██████████▏                          | 18.2M/66.1M [00:02<00:02, 17.9MB/s]     33%|████████████                         | 21.5M/66.1M [00:02<00:02, 19.5MB/s]     37%|█████████████▋                       | 24.5M/66.1M [00:02<00:02, 19.9MB/s]     42%|███████████████▌                     | 27.9M/66.1M [00:02<00:01, 21.1MB/s]     47%|█████████████████▎                   | 30.8M/66.1M [00:02<00:01, 21.0MB/s]     53%|███████████████████▌                 | 34.9M/66.1M [00:02<00:01, 22.6MB/s]     58%|█████████████████████▌               | 38.5M/66.1M [00:02<00:01, 23.3MB/s]     63%|███████████████████████▎             | 41.7M/66.1M [00:03<00:01, 23.2MB/s]     69%|█████████████████████████▍           | 45.5M/66.1M [00:03<00:00, 23.9MB/s]     75%|███████████████████████████▋         | 49.5M/66.1M [00:03<00:00, 24.1MB/s]     81%|█████████████████████████████▉       | 53.5M/66.1M [00:03<00:00, 25.0MB/s]     87%|████████████████████████████████▏    | 57.6M/66.1M [00:03<00:00, 24.9MB/s]     93%|██████████████████████████████████▎  | 61.3M/66.1M [00:03<00:00, 25.2MB/s]     98%|████████████████████████████████████▎| 64.9M/66.1M [00:03<00:00, 25.1MB/s]      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 66.1M/66.1M [00:00<00:00, 416GB/s]






|

.. code-block:: Python


    import hyperspy.api as hs

    s = hs.load("coreloss_spectrum.msa", signal_type="EELS")
    low_loss = hs.load("lowloss_spectrum.msa", signal_type="EELS")

    s.add_elements(("Mn", "O"))
    s.set_microscope_parameters(
        beam_energy=300, convergence_angle=24.6, collection_angle=13.6
    )

    m = s.create_model(low_loss=low_loss)
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()

    # one can also use the Dirac GOS by specifying the GOS parameter
    m = s.create_model(low_loss=low_loss, GOS="dirac")
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 18.202 seconds)


.. _sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: EELS_curve_fitting.ipynb <EELS_curve_fitting.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: EELS_curve_fitting.py <EELS_curve_fitting.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: EELS_curve_fitting.zip <EELS_curve_fitting.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
