
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/model_fitting/EELS_curve_fitting.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_model_fitting_EELS_curve_fitting.py:


EELS curve fitting
==================

Performs curve fitting to an EELS spectrum, plots the result and saves it as
png file.

.. GENERATED FROM PYTHON SOURCE LINES 10-32



.. image-sg:: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :alt: coreloss_spectrum Signal
   :srcset: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]      0%|                                      | 24.6k/42.3M [00:00<02:51, 246kB/s]      0%|                                       | 115k/42.3M [00:00<01:41, 414kB/s]      1%|▏                                      | 266k/42.3M [00:00<00:52, 802kB/s]      1%|▌                                     | 610k/42.3M [00:00<00:24, 1.69MB/s]      3%|█▎                                   | 1.47M/42.3M [00:00<00:10, 3.93MB/s]      7%|██▌                                  | 2.96M/42.3M [00:00<00:05, 7.41MB/s]     13%|████▋                                | 5.41M/42.3M [00:00<00:02, 12.7MB/s]     21%|███████▊                             | 8.99M/42.3M [00:00<00:01, 19.8MB/s]     30%|██████████▉                          | 12.5M/42.3M [00:00<00:01, 24.3MB/s]     38%|██████████████                       | 16.1M/42.3M [00:01<00:00, 27.4MB/s]     46%|████████████████▊                    | 19.3M/42.3M [00:01<00:00, 28.6MB/s]     53%|███████████████████▌                 | 22.4M/42.3M [00:01<00:00, 29.4MB/s]     62%|██████████████████████▉              | 26.2M/42.3M [00:01<00:00, 32.1MB/s]     70%|█████████████████████████▉           | 29.6M/42.3M [00:01<00:00, 32.6MB/s]     78%|████████████████████████████▊        | 32.9M/42.3M [00:01<00:00, 32.1MB/s]     86%|███████████████████████████████▉     | 36.5M/42.3M [00:01<00:00, 33.4MB/s]     94%|██████████████████████████████████▉  | 39.9M/42.3M [00:01<00:00, 32.6MB/s]      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 42.3M/42.3M [00:00<00:00, 254GB/s]
      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]      0%|                                      | 44.0k/66.1M [00:00<03:41, 299kB/s]      0%|                                       | 135k/66.1M [00:00<02:14, 489kB/s]      1%|▎                                     | 472k/66.1M [00:00<00:42, 1.54MB/s]      1%|▌                                     | 977k/66.1M [00:00<00:23, 2.74MB/s]      3%|█                                    | 1.85M/66.1M [00:00<00:13, 4.70MB/s]      5%|█▊                                   | 3.32M/66.1M [00:00<00:07, 7.89MB/s]      9%|███▍                                 | 6.08M/66.1M [00:00<00:04, 14.1MB/s]     14%|█████▎                               | 9.39M/66.1M [00:00<00:02, 19.9MB/s]     19%|███████▏                             | 12.8M/66.1M [00:00<00:02, 24.4MB/s]     25%|█████████▏                           | 16.4M/66.1M [00:01<00:01, 27.7MB/s]     30%|██████████▉                          | 19.5M/66.1M [00:01<00:01, 28.8MB/s]     34%|████████████▊                        | 22.8M/66.1M [00:01<00:01, 30.0MB/s]     40%|██████████████▊                      | 26.5M/66.1M [00:01<00:01, 29.5MB/s]     46%|████████████████▊                    | 30.1M/66.1M [00:01<00:01, 31.5MB/s]     51%|██████████████████▊                  | 33.6M/66.1M [00:01<00:00, 32.5MB/s]     57%|████████████████████▉                | 37.4M/66.1M [00:01<00:00, 33.9MB/s]     62%|██████████████████████▊              | 40.8M/66.1M [00:01<00:00, 30.4MB/s]     66%|████████████████████████▌            | 43.9M/66.1M [00:01<00:00, 30.5MB/s]     72%|██████████████████████████▊          | 47.9M/66.1M [00:02<00:00, 33.1MB/s]     78%|████████████████████████████▊        | 51.4M/66.1M [00:02<00:00, 33.6MB/s]     83%|██████████████████████████████▋      | 54.8M/66.1M [00:02<00:00, 33.6MB/s]     88%|████████████████████████████████▌    | 58.2M/66.1M [00:02<00:00, 33.3MB/s]     93%|██████████████████████████████████▍  | 61.6M/66.1M [00:02<00:00, 33.1MB/s]     98%|████████████████████████████████████▎| 64.9M/66.1M [00:02<00:00, 32.8MB/s]      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 66.1M/66.1M [00:00<00:00, 410GB/s]






|

.. code-block:: Python


    import hyperspy.api as hs

    s = hs.load("coreloss_spectrum.msa", signal_type="EELS")
    ll = hs.load("lowloss_spectrum.msa", signal_type="EELS")

    s.add_elements(("Mn", "O"))
    s.set_microscope_parameters(
        beam_energy=300, convergence_angle=24.6, collection_angle=13.6
    )

    m = s.create_model(low_loss=ll)
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()

    # one can also use the Dirac GOS by specifying the GOS parameter
    m = s.create_model(low_loss=ll, GOS="dirac")
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 13.095 seconds)


.. _sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: EELS_curve_fitting.ipynb <EELS_curve_fitting.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: EELS_curve_fitting.py <EELS_curve_fitting.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: EELS_curve_fitting.zip <EELS_curve_fitting.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
