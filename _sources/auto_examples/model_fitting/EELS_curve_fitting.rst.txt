
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/model_fitting/EELS_curve_fitting.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_model_fitting_EELS_curve_fitting.py:


EELS curve fitting
==================

Performs curve fitting to an EELS spectrum, plots the result and saves it as
png file.

.. GENERATED FROM PYTHON SOURCE LINES 10-32



.. image-sg:: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :alt: coreloss_spectrum Signal
   :srcset: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]      0%|                                      | 14.3k/42.3M [00:00<05:33, 127kB/s]      0%|                                      | 45.1k/42.3M [00:00<03:16, 215kB/s]      0%|                                       | 103k/42.3M [00:00<01:58, 355kB/s]      1%|▏                                      | 224k/42.3M [00:00<01:05, 641kB/s]      1%|▍                                     | 467k/42.3M [00:00<00:35, 1.19MB/s]      2%|▉                                     | 974k/42.3M [00:00<00:17, 2.32MB/s]      5%|█▋                                   | 1.95M/42.3M [00:00<00:08, 4.56MB/s]      9%|███▏                                 | 3.62M/42.3M [00:00<00:04, 7.99MB/s]     16%|█████▉                               | 6.73M/42.3M [00:00<00:02, 14.3MB/s]     23%|████████▌                            | 9.72M/42.3M [00:01<00:01, 18.1MB/s]     31%|███████████▎                         | 12.9M/42.3M [00:01<00:01, 21.3MB/s]     39%|██████████████▍                      | 16.4M/42.3M [00:01<00:01, 24.4MB/s]     47%|█████████████████▎                   | 19.7M/42.3M [00:01<00:00, 25.8MB/s]     53%|███████████████████▋                 | 22.5M/42.3M [00:01<00:00, 25.5MB/s]     61%|██████████████████████▍              | 25.7M/42.3M [00:01<00:00, 26.3MB/s]     69%|█████████████████████████▋           | 29.3M/42.3M [00:01<00:00, 28.1MB/s]     77%|████████████████████████████▍        | 32.5M/42.3M [00:01<00:00, 28.3MB/s]     87%|████████████████████████████████     | 36.6M/42.3M [00:02<00:00, 29.4MB/s]     95%|███████████████████████████████████▏ | 40.2M/42.3M [00:02<00:00, 30.1MB/s]      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 42.3M/42.3M [00:00<00:00, 258GB/s]
      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]      0%|                                      | 12.3k/66.1M [00:00<10:06, 109kB/s]      0%|                                      | 44.0k/66.1M [00:00<05:09, 213kB/s]      0%|                                       | 108k/66.1M [00:00<02:56, 375kB/s]      0%|▏                                      | 231k/66.1M [00:00<01:39, 663kB/s]      1%|▎                                     | 469k/66.1M [00:00<00:55, 1.19MB/s]      1%|▌                                     | 976k/66.1M [00:00<00:28, 2.32MB/s]      3%|█                                    | 1.97M/66.1M [00:00<00:14, 4.46MB/s]      6%|██▏                                  | 3.95M/66.1M [00:00<00:07, 8.65MB/s]     12%|████▎                                | 7.68M/66.1M [00:01<00:03, 16.2MB/s]     16%|██████                               | 10.8M/66.1M [00:01<00:02, 19.6MB/s]     20%|███████▌                             | 13.5M/66.1M [00:01<00:02, 20.9MB/s]     25%|█████████▏                           | 16.4M/66.1M [00:01<00:02, 22.4MB/s]     30%|███████████▏                         | 19.9M/66.1M [00:01<00:01, 25.0MB/s]     35%|████████████▊                        | 22.9M/66.1M [00:01<00:01, 25.4MB/s]     39%|██████████████▍                      | 25.9M/66.1M [00:01<00:01, 25.7MB/s]     44%|████████████████▏                    | 28.8M/66.1M [00:01<00:01, 25.8MB/s]     48%|█████████████████▊                   | 31.8M/66.1M [00:01<00:01, 25.9MB/s]     54%|████████████████████                 | 35.9M/66.1M [00:02<00:01, 27.9MB/s]     59%|█████████████████████▉               | 39.2M/66.1M [00:02<00:00, 28.5MB/s]     64%|███████████████████████▋             | 42.4M/66.1M [00:02<00:00, 28.1MB/s]     69%|█████████████████████████▌           | 45.8M/66.1M [00:02<00:00, 28.8MB/s]     75%|███████████████████████████▌         | 49.3M/66.1M [00:02<00:00, 29.5MB/s]     80%|█████████████████████████████▌       | 52.9M/66.1M [00:02<00:00, 30.2MB/s]     85%|███████████████████████████████▎     | 55.9M/66.1M [00:02<00:00, 28.9MB/s]     89%|████████████████████████████████▉    | 58.8M/66.1M [00:02<00:00, 28.0MB/s]     94%|██████████████████████████████████▊  | 62.1M/66.1M [00:02<00:00, 28.7MB/s]     99%|████████████████████████████████████▌| 65.3M/66.1M [00:03<00:00, 28.5MB/s]      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 66.1M/66.1M [00:00<00:00, 408GB/s]






|

.. code-block:: Python


    import hyperspy.api as hs

    s = hs.load("coreloss_spectrum.msa", signal_type="EELS")
    low_loss = hs.load("lowloss_spectrum.msa", signal_type="EELS")

    s.add_elements(("Mn", "O"))
    s.set_microscope_parameters(
        beam_energy=300, convergence_angle=24.6, collection_angle=13.6
    )

    m = s.create_model(low_loss=low_loss)
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()

    # one can also use the Dirac GOS by specifying the GOS parameter
    m = s.create_model(low_loss=low_loss, GOS="dirac")
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 14.889 seconds)


.. _sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: EELS_curve_fitting.ipynb <EELS_curve_fitting.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: EELS_curve_fitting.py <EELS_curve_fitting.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: EELS_curve_fitting.zip <EELS_curve_fitting.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
