
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/model_fitting/EELS_curve_fitting.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_model_fitting_EELS_curve_fitting.py:


EELS curve fitting
==================

Performs curve fitting to an EELS spectrum, plots the result and saves it as
png file.

.. GENERATED FROM PYTHON SOURCE LINES 10-32



.. image-sg:: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :alt: coreloss_spectrum Signal
   :srcset: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]      0%|                                      | 15.4k/42.3M [00:00<06:32, 108kB/s]      0%|                                      | 39.9k/42.3M [00:00<04:45, 148kB/s]      0%|                                       | 122k/42.3M [00:00<02:02, 346kB/s]      1%|▎                                      | 271k/42.3M [00:00<01:07, 627kB/s]      1%|▌                                     | 562k/42.3M [00:00<00:36, 1.14MB/s]      3%|█                                    | 1.15M/42.3M [00:00<00:18, 2.17MB/s]      6%|██                                   | 2.33M/42.3M [00:00<00:09, 4.18MB/s]     11%|████                                 | 4.65M/42.3M [00:01<00:04, 8.07MB/s]     20%|███████▏                             | 8.26M/42.3M [00:01<00:02, 13.4MB/s]     27%|█████████▉                           | 11.4M/42.3M [00:01<00:01, 15.9MB/s]     35%|████████████▊                        | 14.7M/42.3M [00:01<00:01, 18.1MB/s]     43%|███████████████▊                     | 18.0M/42.3M [00:01<00:01, 19.8MB/s]     50%|██████████████████▌                  | 21.2M/42.3M [00:01<00:01, 20.7MB/s]     58%|█████████████████████▋               | 24.7M/42.3M [00:01<00:00, 21.8MB/s]     67%|████████████████████████▋            | 28.2M/42.3M [00:02<00:00, 22.5MB/s]     74%|███████████████████████████▎         | 31.3M/42.3M [00:02<00:00, 24.5MB/s]     80%|█████████████████████████████▌       | 33.8M/42.3M [00:02<00:00, 23.3MB/s]     87%|████████████████████████████████     | 36.7M/42.3M [00:02<00:00, 22.8MB/s]     95%|███████████████████████████████████▏ | 40.2M/42.3M [00:02<00:00, 23.3MB/s]      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 42.3M/42.3M [00:00<00:00, 181GB/s]
      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]      0%|                                     | 15.4k/66.1M [00:00<13:56, 79.0kB/s]      0%|                                      | 42.0k/66.1M [00:00<07:48, 141kB/s]      0%|                                       | 123k/66.1M [00:00<03:21, 327kB/s]      0%|▏                                      | 285k/66.1M [00:00<01:43, 639kB/s]      1%|▎                                     | 610k/66.1M [00:00<00:53, 1.22MB/s]      2%|▋                                    | 1.23M/66.1M [00:00<00:28, 2.28MB/s]      4%|█▍                                   | 2.51M/66.1M [00:01<00:14, 4.46MB/s]      8%|██▊                                  | 5.04M/66.1M [00:01<00:07, 8.70MB/s]     13%|████▋                                | 8.39M/66.1M [00:01<00:04, 12.9MB/s]     18%|██████▌                              | 11.8M/66.1M [00:01<00:03, 16.2MB/s]     22%|████████▎                            | 14.8M/66.1M [00:01<00:02, 17.7MB/s]     27%|█████████▉                           | 17.7M/66.1M [00:01<00:02, 18.6MB/s]     31%|███████████▌                         | 20.6M/66.1M [00:01<00:02, 19.1MB/s]     36%|█████████████▍                       | 23.9M/66.1M [00:02<00:02, 20.4MB/s]     41%|███████████████                      | 27.0M/66.1M [00:02<00:01, 20.7MB/s]     46%|████████████████▉                    | 30.3M/66.1M [00:02<00:01, 21.6MB/s]     49%|██████████████████▏                  | 32.5M/66.1M [00:02<00:01, 19.0MB/s]     53%|███████████████████▊                 | 35.3M/66.1M [00:02<00:01, 19.5MB/s]     57%|█████████████████████▏               | 37.8M/66.1M [00:02<00:01, 18.8MB/s]     62%|██████████████████████▉              | 41.0M/66.1M [00:02<00:01, 20.0MB/s]     66%|████████████████████████▍            | 43.6M/66.1M [00:03<00:01, 19.4MB/s]     71%|██████████████████████████▏          | 46.7M/66.1M [00:03<00:00, 20.2MB/s]     75%|███████████████████████████▌         | 49.3M/66.1M [00:03<00:00, 19.5MB/s]     80%|█████████████████████████████▌       | 52.7M/66.1M [00:03<00:00, 20.9MB/s]     85%|███████████████████████████████▌     | 56.3M/66.1M [00:03<00:00, 22.1MB/s]     90%|█████████████████████████████████▍   | 59.7M/66.1M [00:03<00:00, 22.6MB/s]     96%|███████████████████████████████████▎ | 63.2M/66.1M [00:03<00:00, 23.3MB/s]      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 66.1M/66.1M [00:00<00:00, 380GB/s]






|

.. code-block:: Python


    import hyperspy.api as hs

    s = hs.load("coreloss_spectrum.msa", signal_type="EELS")
    ll = hs.load("lowloss_spectrum.msa", signal_type="EELS")

    s.add_elements(("Mn", "O"))
    s.set_microscope_parameters(
        beam_energy=300, convergence_angle=24.6, collection_angle=13.6
    )

    m = s.create_model(low_loss=ll)
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()

    # one can also use the Dirac GOS by specifying the GOS parameter
    m = s.create_model(low_loss=ll, GOS="dirac")
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 16.115 seconds)


.. _sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: EELS_curve_fitting.ipynb <EELS_curve_fitting.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: EELS_curve_fitting.py <EELS_curve_fitting.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: EELS_curve_fitting.zip <EELS_curve_fitting.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
