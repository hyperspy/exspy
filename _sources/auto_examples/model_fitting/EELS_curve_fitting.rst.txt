
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/model_fitting/EELS_curve_fitting.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_model_fitting_EELS_curve_fitting.py:


EELS curve fitting
==================

Performs curve fitting to an EELS spectrum, plots the result and saves it as
png file.

.. GENERATED FROM PYTHON SOURCE LINES 10-32



.. image-sg:: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :alt: coreloss_spectrum Signal
   :srcset: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]      0%|                                      | 15.4k/42.3M [00:00<05:03, 139kB/s]      0%|                                      | 49.2k/42.3M [00:00<02:57, 238kB/s]      0%|                                       | 111k/42.3M [00:00<01:49, 385kB/s]      1%|▏                                      | 241k/42.3M [00:00<01:00, 700kB/s]      1%|▍                                     | 512k/42.3M [00:00<00:31, 1.34MB/s]      3%|▉                                    | 1.07M/42.3M [00:00<00:15, 2.60MB/s]      5%|█▉                                   | 2.15M/42.3M [00:00<00:08, 4.96MB/s]     10%|███▊                                 | 4.31M/42.3M [00:00<00:03, 9.64MB/s]     19%|███████                              | 8.07M/42.3M [00:00<00:01, 17.1MB/s]     28%|██████████▎                          | 11.8M/42.3M [00:01<00:01, 22.0MB/s]     35%|████████████▊                        | 14.6M/42.3M [00:01<00:01, 23.2MB/s]     43%|███████████████▉                     | 18.3M/42.3M [00:01<00:00, 26.2MB/s]     51%|██████████████████▉                  | 21.7M/42.3M [00:01<00:00, 27.7MB/s]     59%|█████████████████████▊               | 24.9M/42.3M [00:01<00:00, 28.2MB/s]     67%|████████████████████████▊            | 28.3M/42.3M [00:01<00:00, 29.2MB/s]     75%|███████████████████████████▉         | 31.9M/42.3M [00:01<00:00, 28.6MB/s]     83%|██████████████████████████████▋      | 35.1M/42.3M [00:01<00:00, 28.8MB/s]     91%|█████████████████████████████████▋   | 38.5M/42.3M [00:02<00:00, 29.3MB/s]      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 42.3M/42.3M [00:00<00:00, 236GB/s]
      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]      0%|                                      | 12.3k/66.1M [00:00<10:12, 108kB/s]      0%|                                      | 39.9k/66.1M [00:00<05:52, 187kB/s]      0%|                                      | 99.3k/66.1M [00:00<03:07, 351kB/s]      0%|                                       | 208k/66.1M [00:00<01:46, 620kB/s]      1%|▏                                      | 391k/66.1M [00:00<01:06, 991kB/s]      1%|▍                                     | 816k/66.1M [00:00<00:33, 1.95MB/s]      2%|▉                                    | 1.62M/66.1M [00:00<00:17, 3.67MB/s]      5%|█▊                                   | 3.24M/66.1M [00:00<00:08, 7.13MB/s]     10%|███▌                                 | 6.47M/66.1M [00:01<00:04, 13.8MB/s]     14%|█████▏                               | 9.25M/66.1M [00:01<00:03, 17.2MB/s]     18%|██████▊                              | 12.1M/66.1M [00:01<00:02, 19.7MB/s]     23%|████████▎                            | 14.9M/66.1M [00:01<00:02, 21.2MB/s]     27%|█████████▉                           | 17.8M/66.1M [00:01<00:02, 22.6MB/s]     31%|███████████▌                         | 20.7M/66.1M [00:01<00:01, 23.6MB/s]     36%|█████████████▏                       | 23.7M/66.1M [00:01<00:01, 24.5MB/s]     40%|██████████████▊                      | 26.5M/66.1M [00:01<00:01, 24.8MB/s]     45%|████████████████▍                    | 29.4M/66.1M [00:01<00:01, 25.2MB/s]     49%|██████████████████                   | 32.4M/66.1M [00:02<00:01, 25.4MB/s]     53%|███████████████████▊                 | 35.3M/66.1M [00:02<00:01, 25.8MB/s]     58%|█████████████████████▍               | 38.2M/66.1M [00:02<00:01, 25.9MB/s]     63%|███████████████████████▏             | 41.4M/66.1M [00:02<00:00, 26.5MB/s]     67%|████████████████████████▊            | 44.3M/66.1M [00:02<00:00, 26.3MB/s]     71%|██████████████████████████▎          | 47.1M/66.1M [00:02<00:00, 25.9MB/s]     76%|████████████████████████████         | 50.1M/66.1M [00:02<00:00, 26.0MB/s]     80%|█████████████████████████████▌       | 52.8M/66.1M [00:02<00:00, 25.7MB/s]     84%|███████████████████████████████▏     | 55.7M/66.1M [00:02<00:00, 25.7MB/s]     89%|████████████████████████████████▊    | 58.6M/66.1M [00:03<00:00, 25.6MB/s]     93%|██████████████████████████████████▍  | 61.5M/66.1M [00:03<00:00, 25.7MB/s]     97%|████████████████████████████████████ | 64.4M/66.1M [00:03<00:00, 25.9MB/s]      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 66.1M/66.1M [00:00<00:00, 362GB/s]






|

.. code-block:: Python


    import hyperspy.api as hs

    s = hs.load("coreloss_spectrum.msa", signal_type="EELS")
    low_loss = hs.load("lowloss_spectrum.msa", signal_type="EELS")

    s.add_elements(("Mn", "O"))
    s.set_microscope_parameters(
        beam_energy=300, convergence_angle=24.6, collection_angle=13.6
    )

    m = s.create_model(low_loss=low_loss)
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()

    # one can also use the Dirac GOS by specifying the GOS parameter
    m = s.create_model(low_loss=low_loss, GOS="dirac")
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 15.183 seconds)


.. _sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: EELS_curve_fitting.ipynb <EELS_curve_fitting.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: EELS_curve_fitting.py <EELS_curve_fitting.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: EELS_curve_fitting.zip <EELS_curve_fitting.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
