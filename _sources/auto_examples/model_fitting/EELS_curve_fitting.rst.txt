
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/model_fitting/EELS_curve_fitting.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_model_fitting_EELS_curve_fitting.py:


EELS curve fitting
==================

Performs curve fitting to an EELS spectrum, plots the result and saves it as
png file.

.. GENERATED FROM PYTHON SOURCE LINES 10-32



.. image-sg:: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :alt: coreloss_spectrum Signal
   :srcset: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]      0%|                                     | 12.3k/42.3M [00:00<07:29, 94.1kB/s]      0%|                                       | 113k/42.3M [00:00<01:46, 395kB/s]      1%|▍                                     | 515k/42.3M [00:00<00:32, 1.27MB/s]      4%|█▍                                   | 1.66M/42.3M [00:00<00:10, 4.05MB/s]      8%|██▉                                  | 3.36M/42.3M [00:00<00:05, 7.71MB/s]     15%|█████▍                               | 6.20M/42.3M [00:00<00:02, 13.6MB/s]     20%|███████▍                             | 8.50M/42.3M [00:00<00:02, 15.7MB/s]     28%|██████████▍                          | 11.9M/42.3M [00:01<00:01, 21.0MB/s]     35%|█████████████                        | 15.0M/42.3M [00:01<00:01, 21.7MB/s]     43%|███████████████▊                     | 18.1M/42.3M [00:01<00:00, 24.3MB/s]     50%|██████████████████▌                  | 21.2M/42.3M [00:01<00:00, 26.2MB/s]     57%|████████████████████▉                | 23.9M/42.3M [00:01<00:00, 24.9MB/s]     64%|███████████████████████▋             | 27.1M/42.3M [00:01<00:00, 26.9MB/s]     72%|██████████████████████████▍          | 30.3M/42.3M [00:01<00:00, 25.7MB/s]     79%|█████████████████████████████▏       | 33.4M/42.3M [00:01<00:00, 27.3MB/s]     86%|███████████████████████████████▉     | 36.5M/42.3M [00:01<00:00, 28.4MB/s]     93%|██████████████████████████████████▌  | 39.4M/42.3M [00:02<00:00, 26.7MB/s]      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 42.3M/42.3M [00:00<00:00, 184GB/s]
      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]      0%|                                     | 12.3k/66.1M [00:00<11:09, 98.7kB/s]      0%|                                       | 113k/66.1M [00:00<02:45, 400kB/s]      1%|▎                                     | 514k/66.1M [00:00<00:51, 1.27MB/s]      2%|▉                                    | 1.65M/66.1M [00:00<00:15, 4.04MB/s]      5%|█▊                                   | 3.32M/66.1M [00:00<00:08, 7.63MB/s]      9%|███▍                                 | 6.12M/66.1M [00:00<00:04, 13.5MB/s]     13%|████▋                                | 8.41M/66.1M [00:00<00:03, 15.5MB/s]     18%|██████▌                              | 11.7M/66.1M [00:01<00:02, 20.3MB/s]     22%|████████▎                            | 14.8M/66.1M [00:01<00:02, 21.5MB/s]     27%|██████████                           | 18.0M/66.1M [00:01<00:01, 24.3MB/s]     32%|███████████▋                         | 20.9M/66.1M [00:01<00:01, 25.7MB/s]     36%|█████████████▎                       | 23.9M/66.1M [00:01<00:01, 24.9MB/s]     41%|███████████████                      | 26.8M/66.1M [00:01<00:01, 26.3MB/s]     45%|████████████████▋                    | 29.8M/66.1M [00:01<00:01, 27.3MB/s]     49%|██████████████████▎                  | 32.6M/66.1M [00:01<00:01, 25.4MB/s]     54%|████████████████████                 | 35.8M/66.1M [00:01<00:01, 27.1MB/s]     59%|█████████████████████▋               | 38.8M/66.1M [00:02<00:01, 26.0MB/s]     63%|███████████████████████▍             | 41.9M/66.1M [00:02<00:00, 27.2MB/s]     68%|█████████████████████████▏           | 45.0M/66.1M [00:02<00:00, 25.9MB/s]     73%|██████████████████████████▊          | 47.9M/66.1M [00:02<00:00, 26.9MB/s]     77%|████████████████████████████▌        | 51.1M/66.1M [00:02<00:00, 28.1MB/s]     82%|██████████████████████████████▏      | 53.9M/66.1M [00:02<00:00, 26.4MB/s]     86%|███████████████████████████████▊     | 56.9M/66.1M [00:02<00:00, 27.3MB/s]     91%|█████████████████████████████████▌   | 60.0M/66.1M [00:02<00:00, 26.0MB/s]     95%|███████████████████████████████████▎ | 63.0M/66.1M [00:02<00:00, 27.1MB/s]      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 66.1M/66.1M [00:00<00:00, 309GB/s]






|

.. code-block:: Python


    import hyperspy.api as hs

    s = hs.load("coreloss_spectrum.msa", signal_type="EELS")
    ll = hs.load("lowloss_spectrum.msa", signal_type="EELS")

    s.add_elements(("Mn", "O"))
    s.set_microscope_parameters(
        beam_energy=300, convergence_angle=24.6, collection_angle=13.6
    )

    m = s.create_model(low_loss=ll)
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()

    # one can also use the Dirac GOS by specifying the GOS parameter
    m = s.create_model(low_loss=ll, GOS="dirac")
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 17.240 seconds)


.. _sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: EELS_curve_fitting.ipynb <EELS_curve_fitting.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: EELS_curve_fitting.py <EELS_curve_fitting.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: EELS_curve_fitting.zip <EELS_curve_fitting.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
