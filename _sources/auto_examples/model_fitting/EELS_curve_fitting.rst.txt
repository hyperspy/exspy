
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/model_fitting/EELS_curve_fitting.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_model_fitting_EELS_curve_fitting.py:


EELS curve fitting
==================

Performs curve fitting to an EELS spectrum, plots the result and saves it as
png file.

.. GENERATED FROM PYTHON SOURCE LINES 10-32



.. image-sg:: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :alt: coreloss_spectrum Signal
   :srcset: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]      0%|                                      | 14.3k/42.3M [00:00<06:14, 113kB/s]      0%|                                       | 104k/42.3M [00:00<01:35, 442kB/s]      1%|▏                                      | 233k/42.3M [00:00<01:05, 644kB/s]      2%|▋                                     | 794k/42.3M [00:00<00:18, 2.21MB/s]      4%|█▍                                   | 1.66M/42.3M [00:00<00:09, 4.21MB/s]      7%|██▋                                  | 3.02M/42.3M [00:00<00:05, 7.12MB/s]     13%|████▊                                | 5.52M/42.3M [00:00<00:02, 12.6MB/s]     21%|███████▋                             | 8.82M/42.3M [00:00<00:01, 18.8MB/s]     28%|██████████▍                          | 11.9M/42.3M [00:01<00:01, 21.3MB/s]     37%|█████████████▌                       | 15.4M/42.3M [00:01<00:01, 25.3MB/s]     45%|████████████████▌                    | 18.9M/42.3M [00:01<00:00, 28.1MB/s]     52%|███████████████████                  | 21.8M/42.3M [00:01<00:00, 22.5MB/s]     62%|██████████████████████▊              | 26.1M/42.3M [00:01<00:00, 27.5MB/s]     69%|█████████████████████████▍           | 29.1M/42.3M [00:01<00:00, 28.0MB/s]     77%|████████████████████████████▋        | 32.7M/42.3M [00:01<00:00, 30.2MB/s]     85%|███████████████████████████████▍     | 35.9M/42.3M [00:01<00:00, 30.2MB/s]     94%|██████████████████████████████████▊  | 39.8M/42.3M [00:01<00:00, 32.6MB/s]      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 42.3M/42.3M [00:00<00:00, 270GB/s]
      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]      0%|                                      | 14.3k/66.1M [00:00<09:49, 112kB/s]      0%|                                       | 109k/66.1M [00:00<02:04, 531kB/s]      0%|▏                                      | 275k/66.1M [00:00<01:19, 832kB/s]      1%|▎                                     | 604k/66.1M [00:00<00:43, 1.51MB/s]      2%|▉                                    | 1.58M/66.1M [00:00<00:16, 4.00MB/s]      5%|█▊                                   | 3.22M/66.1M [00:00<00:08, 7.75MB/s]      9%|███▍                                 | 6.10M/66.1M [00:00<00:04, 14.1MB/s]     15%|█████▌                               | 9.93M/66.1M [00:00<00:02, 21.4MB/s]     21%|███████▌                             | 13.6M/66.1M [00:01<00:02, 25.9MB/s]     27%|█████████▊                           | 17.5M/66.1M [00:01<00:01, 30.0MB/s]     31%|███████████▌                         | 20.7M/66.1M [00:01<00:01, 30.5MB/s]     36%|█████████████▍                       | 24.1M/66.1M [00:01<00:01, 29.4MB/s]     43%|███████████████▊                     | 28.1M/66.1M [00:01<00:01, 32.7MB/s]     48%|█████████████████▊                   | 31.8M/66.1M [00:01<00:01, 33.7MB/s]     53%|███████████████████▋                 | 35.2M/66.1M [00:01<00:00, 33.6MB/s]     59%|█████████████████████▊               | 39.0M/66.1M [00:01<00:00, 34.8MB/s]     64%|███████████████████████▊             | 42.5M/66.1M [00:01<00:00, 31.5MB/s]     70%|█████████████████████████▊           | 46.2M/66.1M [00:01<00:00, 33.2MB/s]     75%|███████████████████████████▊         | 49.8M/66.1M [00:02<00:00, 33.9MB/s]     81%|██████████████████████████████       | 53.8M/66.1M [00:02<00:00, 35.7MB/s]     87%|████████████████████████████████▏    | 57.4M/66.1M [00:02<00:00, 35.8MB/s]     92%|██████████████████████████████████▏  | 61.0M/66.1M [00:02<00:00, 35.7MB/s]     98%|████████████████████████████████████▏| 64.6M/66.1M [00:02<00:00, 34.0MB/s]      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 66.1M/66.1M [00:00<00:00, 390GB/s]






|

.. code-block:: Python


    import hyperspy.api as hs

    s = hs.load("coreloss_spectrum.msa", signal_type="EELS")
    ll = hs.load("lowloss_spectrum.msa", signal_type="EELS")

    s.add_elements(("Mn", "O"))
    s.set_microscope_parameters(
        beam_energy=300, convergence_angle=24.6, collection_angle=13.6
    )

    m = s.create_model(low_loss=ll)
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()

    # one can also use the Dirac GOS by specifying the GOS parameter
    m = s.create_model(low_loss=ll, GOS="dirac")
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 16.391 seconds)


.. _sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: EELS_curve_fitting.ipynb <EELS_curve_fitting.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: EELS_curve_fitting.py <EELS_curve_fitting.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: EELS_curve_fitting.zip <EELS_curve_fitting.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
