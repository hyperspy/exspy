
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/model_fitting/EELS_curve_fitting.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_model_fitting_EELS_curve_fitting.py:


EELS curve fitting
==================

Performs curve fitting to an EELS spectrum, plots the result and saves it as
png file.

.. GENERATED FROM PYTHON SOURCE LINES 10-32



.. image-sg:: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :alt: coreloss_spectrum Signal
   :srcset: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]      0%|                                      | 43.0k/42.3M [00:00<01:38, 430kB/s]      0%|                                       | 103k/42.3M [00:00<01:56, 363kB/s]      1%|▏                                      | 267k/42.3M [00:00<00:53, 786kB/s]      1%|▌                                     | 615k/42.3M [00:00<00:24, 1.67MB/s]      3%|█▏                                   | 1.36M/42.3M [00:00<00:11, 3.52MB/s]      7%|██▍                                  | 2.75M/42.3M [00:00<00:05, 6.77MB/s]     12%|████▌                                | 5.21M/42.3M [00:00<00:03, 12.3MB/s]     20%|███████▍                             | 8.53M/42.3M [00:00<00:01, 18.7MB/s]     27%|█████████▊                           | 11.3M/42.3M [00:00<00:01, 21.3MB/s]     35%|████████████▊                        | 14.6M/42.3M [00:01<00:01, 25.0MB/s]     43%|███████████████▊                     | 18.1M/42.3M [00:01<00:00, 27.9MB/s]     51%|██████████████████▊                  | 21.4M/42.3M [00:01<00:00, 29.6MB/s]     59%|█████████████████████▉               | 25.1M/42.3M [00:01<00:00, 31.8MB/s]     68%|█████████████████████████            | 28.7M/42.3M [00:01<00:00, 33.0MB/s]     76%|████████████████████████████▏        | 32.2M/42.3M [00:01<00:00, 33.7MB/s]     84%|███████████████████████████████▏     | 35.6M/42.3M [00:01<00:00, 32.5MB/s]     93%|██████████████████████████████████▍  | 39.3M/42.3M [00:01<00:00, 33.5MB/s]      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 42.3M/42.3M [00:00<00:00, 278GB/s]
      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]      0%|                                      | 12.3k/66.1M [00:00<10:48, 102kB/s]      0%|                                       | 116k/66.1M [00:00<02:32, 433kB/s]      0%|▏                                      | 290k/66.1M [00:00<01:18, 835kB/s]      1%|▎                                     | 643k/66.1M [00:00<00:38, 1.70MB/s]      2%|▊                                    | 1.40M/66.1M [00:00<00:18, 3.54MB/s]      4%|█▌                                   | 2.77M/66.1M [00:00<00:09, 6.69MB/s]      8%|██▉                                  | 5.35M/66.1M [00:00<00:04, 12.6MB/s]     13%|████▊                                | 8.64M/66.1M [00:00<00:03, 18.8MB/s]     18%|██████▌                              | 11.6M/66.1M [00:01<00:02, 22.2MB/s]     22%|████████▏                            | 14.7M/66.1M [00:01<00:02, 24.7MB/s]     27%|██████████▏                          | 18.1M/66.1M [00:01<00:01, 27.6MB/s]     33%|████████████                         | 21.6M/66.1M [00:01<00:01, 29.7MB/s]     38%|█████████████▉                       | 24.9M/66.1M [00:01<00:01, 30.4MB/s]     42%|███████████████▋                     | 28.0M/66.1M [00:01<00:01, 30.7MB/s]     48%|█████████████████▉                   | 32.0M/66.1M [00:01<00:01, 33.1MB/s]     54%|███████████████████▉                 | 35.5M/66.1M [00:01<00:00, 33.5MB/s]     59%|█████████████████████▊               | 38.9M/66.1M [00:01<00:00, 33.5MB/s]     64%|███████████████████████▋             | 42.3M/66.1M [00:01<00:00, 33.7MB/s]     69%|█████████████████████████▌           | 45.7M/66.1M [00:02<00:00, 33.8MB/s]     74%|███████████████████████████▍         | 49.1M/66.1M [00:02<00:00, 33.4MB/s]     79%|█████████████████████████████▎       | 52.4M/66.1M [00:02<00:00, 33.2MB/s]     85%|███████████████████████████████▍     | 56.2M/66.1M [00:02<00:00, 34.4MB/s]     90%|█████████████████████████████████▍   | 59.6M/66.1M [00:02<00:00, 32.1MB/s]     96%|███████████████████████████████████▌ | 63.4M/66.1M [00:02<00:00, 33.9MB/s]      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 66.1M/66.1M [00:00<00:00, 449GB/s]






|

.. code-block:: Python


    import hyperspy.api as hs

    s = hs.load("coreloss_spectrum.msa", signal_type="EELS")
    low_loss = hs.load("lowloss_spectrum.msa", signal_type="EELS")

    s.add_elements(("Mn", "O"))
    s.set_microscope_parameters(
        beam_energy=300, convergence_angle=24.6, collection_angle=13.6
    )

    m = s.create_model(low_loss=low_loss)
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()

    # one can also use the Dirac GOS by specifying the GOS parameter
    m = s.create_model(low_loss=low_loss, GOS="dirac")
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 13.104 seconds)


.. _sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: EELS_curve_fitting.ipynb <EELS_curve_fitting.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: EELS_curve_fitting.py <EELS_curve_fitting.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: EELS_curve_fitting.zip <EELS_curve_fitting.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
