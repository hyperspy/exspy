
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/model_fitting/EELS_curve_fitting.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_model_fitting_EELS_curve_fitting.py:


EELS curve fitting
==================

Performs curve fitting to an EELS spectrum, plots the result and saves it as
png file.

.. GENERATED FROM PYTHON SOURCE LINES 10-32



.. image-sg:: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :alt: coreloss_spectrum Signal
   :srcset: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]      0%|                                      | 41.0k/42.3M [00:00<01:59, 354kB/s]      0%|                                       | 123k/42.3M [00:00<01:39, 424kB/s]      1%|▎                                     | 384k/42.3M [00:00<00:34, 1.20MB/s]      2%|▋                                     | 819k/42.3M [00:00<00:18, 2.26MB/s]      4%|█▎                                   | 1.54M/42.3M [00:00<00:10, 3.85MB/s]      7%|██▌                                  | 2.90M/42.3M [00:00<00:05, 6.95MB/s]     13%|████▊                                | 5.55M/42.3M [00:00<00:02, 13.0MB/s]     20%|███████▎                             | 8.36M/42.3M [00:00<00:01, 17.7MB/s]     27%|█████████▉                           | 11.3M/42.3M [00:00<00:01, 21.2MB/s]     33%|████████████▍                        | 14.1M/42.3M [00:01<00:01, 23.4MB/s]     40%|██████████████▉                      | 17.1M/42.3M [00:01<00:01, 25.2MB/s]     47%|█████████████████▍                   | 19.9M/42.3M [00:01<00:00, 26.1MB/s]     54%|███████████████████▉                 | 22.8M/42.3M [00:01<00:00, 27.1MB/s]     61%|██████████████████████▍              | 25.6M/42.3M [00:01<00:00, 27.3MB/s]     68%|████████████████████████▉            | 28.5M/42.3M [00:01<00:00, 28.0MB/s]     74%|███████████████████████████▍         | 31.4M/42.3M [00:01<00:00, 28.2MB/s]     81%|██████████████████████████████       | 34.3M/42.3M [00:01<00:00, 28.4MB/s]     88%|████████████████████████████████▌    | 37.1M/42.3M [00:01<00:00, 28.4MB/s]     95%|███████████████████████████████████  | 40.1M/42.3M [00:01<00:00, 28.7MB/s]      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 42.3M/42.3M [00:00<00:00, 224GB/s]
      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]      0%|                                      | 16.4k/66.1M [00:00<08:27, 130kB/s]      0%|                                       | 108k/66.1M [00:00<02:04, 530kB/s]      0%|▏                                      | 273k/66.1M [00:00<01:22, 796kB/s]      1%|▎                                     | 610k/66.1M [00:00<00:43, 1.50MB/s]      2%|▋                                    | 1.27M/66.1M [00:00<00:21, 3.03MB/s]      4%|█▍                                   | 2.61M/66.1M [00:00<00:10, 6.10MB/s]      8%|██▉                                  | 5.19M/66.1M [00:00<00:05, 12.0MB/s]     13%|████▉                                | 8.75M/66.1M [00:00<00:03, 19.1MB/s]     18%|██████▌                              | 11.7M/66.1M [00:01<00:02, 22.1MB/s]     22%|████████▏                            | 14.6M/66.1M [00:01<00:02, 24.1MB/s]     27%|█████████▉                           | 17.8M/66.1M [00:01<00:01, 26.4MB/s]     32%|███████████▋                         | 20.8M/66.1M [00:01<00:01, 27.7MB/s]     36%|█████████████▍                       | 23.9M/66.1M [00:01<00:01, 28.6MB/s]     41%|███████████████▏                     | 27.2M/66.1M [00:01<00:01, 30.0MB/s]     46%|████████████████▉                    | 30.3M/66.1M [00:01<00:01, 29.7MB/s]     50%|██████████████████▌                  | 33.3M/66.1M [00:01<00:01, 29.7MB/s]     55%|████████████████████▌                | 36.6M/66.1M [00:01<00:00, 30.9MB/s]     60%|██████████████████████▎              | 39.9M/66.1M [00:01<00:00, 31.4MB/s]     65%|████████████████████████             | 43.0M/66.1M [00:02<00:00, 31.1MB/s]     71%|██████████████████████████           | 46.6M/66.1M [00:02<00:00, 32.5MB/s]     75%|███████████████████████████▉         | 49.9M/66.1M [00:02<00:00, 32.4MB/s]     80%|█████████████████████████████▋       | 53.1M/66.1M [00:02<00:00, 32.4MB/s]     85%|███████████████████████████████▌     | 56.4M/66.1M [00:02<00:00, 32.4MB/s]     90%|█████████████████████████████████▍   | 59.7M/66.1M [00:02<00:00, 32.5MB/s]     95%|███████████████████████████████████▏ | 62.9M/66.1M [00:02<00:00, 32.1MB/s]      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 66.1M/66.1M [00:00<00:00, 375GB/s]






|

.. code-block:: Python


    import hyperspy.api as hs

    s = hs.load("coreloss_spectrum.msa", signal_type="EELS")
    low_loss = hs.load("lowloss_spectrum.msa", signal_type="EELS")

    s.add_elements(("Mn", "O"))
    s.set_microscope_parameters(
        beam_energy=300, convergence_angle=24.6, collection_angle=13.6
    )

    m = s.create_model(low_loss=low_loss)
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()

    # one can also use the Dirac GOS by specifying the GOS parameter
    m = s.create_model(low_loss=low_loss, GOS="dirac")
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 13.708 seconds)


.. _sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: EELS_curve_fitting.ipynb <EELS_curve_fitting.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: EELS_curve_fitting.py <EELS_curve_fitting.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: EELS_curve_fitting.zip <EELS_curve_fitting.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
