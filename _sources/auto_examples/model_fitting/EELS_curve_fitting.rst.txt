
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/model_fitting/EELS_curve_fitting.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_model_fitting_EELS_curve_fitting.py:


EELS curve fitting
==================

Performs curve fitting to an EELS spectrum, plots the result and saves it as
png file.

.. GENERATED FROM PYTHON SOURCE LINES 10-32



.. image-sg:: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :alt: coreloss_spectrum Signal
   :srcset: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]      0%|                                      | 28.7k/42.3M [00:00<03:42, 190kB/s]      0%|                                       | 118k/42.3M [00:00<01:34, 446kB/s]      1%|▎                                      | 350k/42.3M [00:00<00:43, 963kB/s]      2%|▉                                    | 1.00M/42.3M [00:00<00:15, 2.67MB/s]      5%|█▊                                   | 2.08M/42.3M [00:00<00:07, 5.14MB/s]      9%|███▍                                 | 3.94M/42.3M [00:00<00:04, 9.24MB/s]     17%|██████▏                              | 7.08M/42.3M [00:00<00:02, 14.7MB/s]     26%|█████████▌                           | 10.9M/42.3M [00:00<00:01, 21.3MB/s]     33%|████████████▏                        | 13.9M/42.3M [00:01<00:01, 23.9MB/s]     42%|███████████████▍                     | 17.7M/42.3M [00:01<00:00, 27.9MB/s]     50%|██████████████████▌                  | 21.2M/42.3M [00:01<00:00, 29.8MB/s]     59%|█████████████████████▊               | 24.9M/42.3M [00:01<00:00, 31.7MB/s]     67%|████████████████████████▉            | 28.5M/42.3M [00:01<00:00, 32.9MB/s]     75%|███████████████████████████▊         | 31.8M/42.3M [00:01<00:00, 33.0MB/s]     84%|██████████████████████████████▉      | 35.4M/42.3M [00:01<00:00, 33.6MB/s]     92%|█████████████████████████████████▉   | 38.7M/42.3M [00:01<00:00, 33.5MB/s]      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 42.3M/42.3M [00:00<00:00, 281GB/s]
      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]      0%|                                      | 38.9k/66.1M [00:00<04:51, 227kB/s]      0%|                                      | 94.2k/66.1M [00:00<03:09, 349kB/s]      1%|▏                                     | 359k/66.1M [00:00<00:54, 1.22MB/s]      1%|▌                                     | 883k/66.1M [00:00<00:30, 2.12MB/s]      3%|█                                    | 1.96M/66.1M [00:00<00:14, 4.40MB/s]      6%|██▎                                  | 4.18M/66.1M [00:00<00:06, 9.40MB/s]     11%|████                                 | 7.24M/66.1M [00:00<00:03, 15.5MB/s]     16%|█████▊                               | 10.4M/66.1M [00:00<00:02, 20.1MB/s]     20%|███████▌                             | 13.5M/66.1M [00:01<00:02, 23.4MB/s]     25%|█████████▎                           | 16.7M/66.1M [00:01<00:01, 26.0MB/s]     30%|███████████▎                         | 20.1M/66.1M [00:01<00:01, 28.3MB/s]     36%|█████████████▎                       | 23.7M/66.1M [00:01<00:01, 30.5MB/s]     42%|███████████████▎                     | 27.5M/66.1M [00:01<00:01, 32.7MB/s]     47%|█████████████████▏                   | 30.8M/66.1M [00:01<00:01, 32.5MB/s]     52%|███████████████████▎                 | 34.4M/66.1M [00:01<00:01, 28.6MB/s]     58%|█████████████████████▍               | 38.4M/66.1M [00:01<00:00, 31.4MB/s]     64%|███████████████████████▋             | 42.2M/66.1M [00:01<00:00, 32.2MB/s]     70%|█████████████████████████▉           | 46.3M/66.1M [00:02<00:00, 34.2MB/s]     76%|████████████████████████████▏        | 50.2M/66.1M [00:02<00:00, 35.3MB/s]     81%|██████████████████████████████▏      | 53.8M/66.1M [00:02<00:00, 35.1MB/s]     87%|████████████████████████████████▏    | 57.5M/66.1M [00:02<00:00, 35.7MB/s]     93%|██████████████████████████████████▏  | 61.1M/66.1M [00:02<00:00, 35.8MB/s]     98%|████████████████████████████████████▏| 64.7M/66.1M [00:02<00:00, 35.6MB/s]      0%|                                              | 0.00/66.1M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 66.1M/66.1M [00:00<00:00, 451GB/s]






|

.. code-block:: Python


    import hyperspy.api as hs

    s = hs.load("coreloss_spectrum.msa", signal_type="EELS")
    low_loss = hs.load("lowloss_spectrum.msa", signal_type="EELS")

    s.add_elements(("Mn", "O"))
    s.set_microscope_parameters(
        beam_energy=300, convergence_angle=24.6, collection_angle=13.6
    )

    m = s.create_model(low_loss=low_loss)
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()

    # one can also use the Dirac GOS by specifying the GOS parameter
    m = s.create_model(low_loss=low_loss, GOS="dirac")
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()



.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 13.330 seconds)


.. _sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: EELS_curve_fitting.ipynb <EELS_curve_fitting.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: EELS_curve_fitting.py <EELS_curve_fitting.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: EELS_curve_fitting.zip <EELS_curve_fitting.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
